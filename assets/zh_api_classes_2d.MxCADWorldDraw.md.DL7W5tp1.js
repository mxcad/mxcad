import{_ as e,c as a,o as s,a4 as r}from"./chunks/framework.DirjshaF.js";const k=JSON.parse('{"title":"Class: MxCADWorldDraw","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/classes/2d.MxCADWorldDraw.md","filePath":"zh/api/classes/2d.MxCADWorldDraw.md"}'),i={name:"zh/api/classes/2d.MxCADWorldDraw.md"};function l(n,t,d,h,o,p){return s(),a("div",null,[...t[0]||(t[0]=[r(`<p><a href="./../README.html">mxcad_2d API 文档</a> / <a href="./../modules/2d.html">2d</a> / MxCADWorldDraw</p><h1 id="class-mxcadworlddraw" tabindex="-1">Class: MxCADWorldDraw <a class="header-anchor" href="#class-mxcadworlddraw" aria-label="Permalink to &quot;Class: MxCADWorldDraw&quot;">​</a></h1><p><a href="./../modules/2d.html">2d</a>.MxCADWorldDraw</p><p>在 AutoCAD 中实现自定义的绘图逻辑，例如绘制图形、标注、符号等。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbCustomEntity, McGePoint3d, MxCADWorldDraw, McDbPolyline } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 自定义实体类 继承 McDbCustomEntity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbTestLineCustomEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 定义实体内 pt1、pt2 两个点对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 绘制自定义实体</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> worldDraw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">draw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADWorldDraw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // 构造一个新多段线对象pl</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbPolyline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // pl新增点对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           pl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addVertexAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           pl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addVertexAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           pl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addVertexAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // 绘制pl多段线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           draw.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pl);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./2d.MxCADWorldDraw.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./2d.MxCADWorldDraw.html#imp">imp</a></li></ul><h3 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-label="Permalink to &quot;Accessors&quot;">​</a></h3><ul><li><a href="./2d.MxCADWorldDraw.html#layerid">layerId</a></li><li><a href="./2d.MxCADWorldDraw.html#linetypeid">lineTypeId</a></li><li><a href="./2d.MxCADWorldDraw.html#linetypescale">lineTypeScale</a></li><li><a href="./2d.MxCADWorldDraw.html#lineweight">lineWeight</a></li><li><a href="./2d.MxCADWorldDraw.html#truecolor">trueColor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./2d.MxCADWorldDraw.html#drawentity">drawEntity</a></li><li><a href="./2d.MxCADWorldDraw.html#drawosnapentity">drawOsnapEntity</a></li><li><a href="./2d.MxCADWorldDraw.html#getdatabase">getDatabase</a></li><li><a href="./2d.MxCADWorldDraw.html#gettype">getType</a></li><li><a href="./2d.MxCADWorldDraw.html#inittype">initType</a></li><li><a href="./2d.MxCADWorldDraw.html#setupforentity">setupForEntity</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new MxCADWorldDraw</strong>(<code>lPtrWorldDraw</code>)</p><p>构造函数</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>lPtrWorldDraw</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">传递指向绘图设备的指针</td></tr></tbody></table><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="imp" tabindex="-1">imp <a class="header-anchor" href="#imp" aria-label="Permalink to &quot;imp&quot;">​</a></h3><p>• <strong>imp</strong>: <code>any</code></p><p>内部对象实现</p><h2 id="accessors-1" tabindex="-1">Accessors <a class="header-anchor" href="#accessors-1" aria-label="Permalink to &quot;Accessors&quot;">​</a></h2><h3 id="layerid" tabindex="-1">layerId <a class="header-anchor" href="#layerid" aria-label="Permalink to &quot;layerId&quot;">​</a></h3><p>• <code>get</code> <strong>layerId</strong>(): <a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><p>• <code>set</code> <strong>layerId</strong>(<code>val</code>): <code>void</code></p><p>设置或获取当前使用的图层</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McObjectId.html"><code>McObjectId</code></a></td><td style="text-align:left;">图层id</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="linetypeid" tabindex="-1">lineTypeId <a class="header-anchor" href="#linetypeid" aria-label="Permalink to &quot;lineTypeId&quot;">​</a></h3><p>• <code>get</code> <strong>lineTypeId</strong>(): <a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><p>• <code>set</code> <strong>lineTypeId</strong>(<code>val</code>): <code>void</code></p><p>设置或获取当前使用的线型id</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McObjectId.html"><code>McObjectId</code></a></td><td style="text-align:left;">线型id</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="linetypescale" tabindex="-1">lineTypeScale <a class="header-anchor" href="#linetypescale" aria-label="Permalink to &quot;lineTypeScale&quot;">​</a></h3><p>• <code>get</code> <strong>lineTypeScale</strong>(): <code>number</code></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>• <code>set</code> <strong>lineTypeScale</strong>(<code>val</code>): <code>void</code></p><p>设置或获取当前使用的线型比例</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">线型比例</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="lineweight" tabindex="-1">lineWeight <a class="header-anchor" href="#lineweight" aria-label="Permalink to &quot;lineWeight&quot;">​</a></h3><p>• <code>get</code> <strong>lineWeight</strong>(): <a href="./../enums/2d.McDb.LineWeight.html"><code>LineWeight</code></a></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../enums/2d.McDb.LineWeight.html"><code>LineWeight</code></a></p><p>• <code>set</code> <strong>lineWeight</strong>(<code>val</code>): <code>void</code></p><p>设置或获取当前使用的线重</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./../enums/2d.McDb.LineWeight.html"><code>LineWeight</code></a></td><td style="text-align:left;">使用的线重</td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="truecolor" tabindex="-1">trueColor <a class="header-anchor" href="#truecolor" aria-label="Permalink to &quot;trueColor&quot;">​</a></h3><p>• <code>get</code> <strong>trueColor</strong>(): <a href="./2d.McCmColor.html"><code>McCmColor</code></a></p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McCmColor.html"><code>McCmColor</code></a></p><p>• <code>set</code> <strong>trueColor</strong>(<code>val</code>): <code>void</code></p><p>设置或获取颜色</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McCmColor.html"><code>McCmColor</code></a></td><td style="text-align:left;">颜色对象（McCmColor）</td></tr></tbody></table><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="drawentity" tabindex="-1">drawEntity <a class="header-anchor" href="#drawentity" aria-label="Permalink to &quot;drawEntity&quot;">​</a></h3><p>▸ <strong>drawEntity</strong>(<code>entity</code>): <code>void</code></p><p>绘制实例对象</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><a href="./2d.McDbEntity.html"><code>McDbEntity</code></a></td></tr></tbody></table><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="drawosnapentity" tabindex="-1">drawOsnapEntity <a class="header-anchor" href="#drawosnapentity" aria-label="Permalink to &quot;drawOsnapEntity&quot;">​</a></h3><p>▸ <strong>drawOsnapEntity</strong>(<code>entity</code>): <code>void</code></p><p>绘制一个用于捕捉使用的对象.</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><a href="./2d.McDbEntity.html"><code>McDbEntity</code></a></td></tr></tbody></table><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="getdatabase" tabindex="-1">getDatabase <a class="header-anchor" href="#getdatabase" aria-label="Permalink to &quot;getDatabase&quot;">​</a></h3><p>▸ <strong>getDatabase</strong>(): <a href="./2d.McDbDatabase.html"><code>McDbDatabase</code></a></p><p>返回worddraw当前绘制的数据库。</p><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McDbDatabase.html"><code>McDbDatabase</code></a></p><hr><h3 id="gettype" tabindex="-1">getType <a class="header-anchor" href="#gettype" aria-label="Permalink to &quot;getType&quot;">​</a></h3><p>▸ <strong>getType</strong>(): <a href="./../enums/2d.MxCADWorldDrawType.html"><code>MxCADWorldDrawType</code></a></p><p>得到worddraw type</p><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../enums/2d.MxCADWorldDrawType.html"><code>MxCADWorldDrawType</code></a></p><hr><h3 id="inittype" tabindex="-1">initType <a class="header-anchor" href="#inittype" aria-label="Permalink to &quot;initType&quot;">​</a></h3><p>▸ <strong>initType</strong>(<code>type</code>): <code>void</code></p><p>初始化worddraw type</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;"><a href="./../enums/2d.MxCADWorldDrawType.html"><code>MxCADWorldDrawType</code></a></td></tr></tbody></table><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setupforentity" tabindex="-1">setupForEntity <a class="header-anchor" href="#setupforentity" aria-label="Permalink to &quot;setupForEntity&quot;">​</a></h3><p>▸ <strong>setupForEntity</strong>(<code>entity</code>): <code>boolean</code></p><p>使Draw对象使用使用entity的属性</p><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>entity</code></td><td style="text-align:left;"><a href="./2d.McDbEntity.html"><code>McDbEntity</code></a></td></tr></tbody></table><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p>`,124)])])}const y=e(i,[["render",l]]);export{k as __pageData,y as default};
