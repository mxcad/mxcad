import{_ as e,c as a,o as s,a4 as i}from"./chunks/framework.DirjshaF.js";const k=JSON.parse('{"title":"Class: McDbXlsxTable","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/classes/2d.McDbXlsxTable.md","filePath":"zh/api/classes/2d.McDbXlsxTable.md"}'),l={name:"zh/api/classes/2d.McDbXlsxTable.md"};function n(h,t,r,d,o,p){return s(),a("div",null,[...t[0]||(t[0]=[i(`<p><a href="./../README.html">mxcad_2d API 文档</a> / <a href="./../modules/2d.html">2d</a> / McDbXlsxTable</p><h1 id="class-mcdbxlsxtable" tabindex="-1">Class: McDbXlsxTable <a class="header-anchor" href="#class-mcdbxlsxtable" aria-label="Permalink to &quot;Class: McDbXlsxTable&quot;">​</a></h1><p><a href="./../modules/2d.html">2d</a>.McDbXlsxTable</p><p>自定义实体。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { IMcDbDwgFiler, McDbCustomEntity, McDbLine, McDbPolyline, McGePoint3d, McGePoint3dArray, MxCADUiPrPoint, MxCADWorldDraw, MxCpp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxFun } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxdraw&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 新创建 McDbTestLineCustomEntity 类继承 McDbCustomEntity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbTestLineCustomEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 定义McDbTestLineCustomEntity内部的点对象 pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 构造函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">imp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(imp);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 创建函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">imp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbTestLineCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(imp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 获取类名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getTypeName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;McDbTestLineCustomEntity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 读取自定义实体数据pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dwgInFields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IMcDbDwgFiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pt1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).val;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pt2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).val;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 写入自定义实体数据pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dwgOutFields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IMcDbDwgFiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       filter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writePoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pt1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       filter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writePoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pt2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 处理夹点编辑效果</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moveGripPointsAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">iIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dXOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dYOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dZOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (iIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dXOffset;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dYOffset;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1.z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dZOffset;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (iIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dXOffset;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dYOffset;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2.z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dZOffset;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   };</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 设置对象编辑点位</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getGripPoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3dArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3dArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       ret.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       ret.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ret;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   };</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 绘制实体</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> worldDraw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">draw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADWorldDraw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // let tmpline = new McDbLine(this.pt1, this.pt2);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbPolyline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       pl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addVertexAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       pl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addVertexAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       pl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addVertexAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       draw.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pl);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 设置pt1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setPoint1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pt1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pt1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 设置pt2   </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setPoint2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pt2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pt2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 获取pt1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getPoint1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 获取pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getPoint2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span></code></pre></div><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><a href="./2d.McDbCustomEntity.html"><code>McDbCustomEntity</code></a></p><p>↳ <strong><code>McDbXlsxTable</code></strong></p></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./2d.McDbXlsxTable.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./2d.McDbXlsxTable.html#imp">imp</a></li></ul><h3 id="accessors" tabindex="-1">Accessors <a class="header-anchor" href="#accessors" aria-label="Permalink to &quot;Accessors&quot;">​</a></h3><ul><li><a href="./2d.McDbXlsxTable.html#colwidth">colWidth</a></li><li><a href="./2d.McDbXlsxTable.html#colorindex">colorIndex</a></li><li><a href="./2d.McDbXlsxTable.html#draworder">drawOrder</a></li><li><a href="./2d.McDbXlsxTable.html#dxf0">dxf0</a></li><li><a href="./2d.McDbXlsxTable.html#layer">layer</a></li><li><a href="./2d.McDbXlsxTable.html#layerid">layerId</a></li><li><a href="./2d.McDbXlsxTable.html#linetype">linetype</a></li><li><a href="./2d.McDbXlsxTable.html#linetypeid">linetypeId</a></li><li><a href="./2d.McDbXlsxTable.html#linetypescale">linetypeScale</a></li><li><a href="./2d.McDbXlsxTable.html#lineweight">lineweight</a></li><li><a href="./2d.McDbXlsxTable.html#normal">normal</a></li><li><a href="./2d.McDbXlsxTable.html#objectname">objectName</a></li><li><a href="./2d.McDbXlsxTable.html#position">position</a></li><li><a href="./2d.McDbXlsxTable.html#rowheight">rowHeight</a></li><li><a href="./2d.McDbXlsxTable.html#stylename">styleName</a></li><li><a href="./2d.McDbXlsxTable.html#textstyle">textStyle</a></li><li><a href="./2d.McDbXlsxTable.html#textstyleid">textStyleId</a></li><li><a href="./2d.McDbXlsxTable.html#truecolor">trueColor</a></li><li><a href="./2d.McDbXlsxTable.html#visible">visible</a></li><li><a href="./2d.McDbXlsxTable.html#xlsxdata">xlsxData</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./2d.McDbXlsxTable.html#intersectwith">IntersectWith</a></li><li><a href="./2d.McDbXlsxTable.html#addselectedcell">addSelectedCell</a></li><li><a href="./2d.McDbXlsxTable.html#assertobjectmodification">assertObjectModification</a></li><li><a href="./2d.McDbXlsxTable.html#calculatetabledimensions">calculateTableDimensions</a></li><li><a href="./2d.McDbXlsxTable.html#clearselectedcell">clearSelectedCell</a></li><li><a href="./2d.McDbXlsxTable.html#clone">clone</a></li><li><a href="./2d.McDbXlsxTable.html#create">create</a></li><li><a href="./2d.McDbXlsxTable.html#createextensiondictionary">createExtensionDictionary</a></li><li><a href="./2d.McDbXlsxTable.html#deletecolumn">deleteColumn</a></li><li><a href="./2d.McDbXlsxTable.html#deleterow">deleteRow</a></li><li><a href="./2d.McDbXlsxTable.html#deletexdata">deleteXData</a></li><li><a href="./2d.McDbXlsxTable.html#disabledisplay">disableDisplay</a></li><li><a href="./2d.McDbXlsxTable.html#dwginfields">dwgInFields</a></li><li><a href="./2d.McDbXlsxTable.html#dwgoutfields">dwgOutFields</a></li><li><a href="./2d.McDbXlsxTable.html#erase">erase</a></li><li><a href="./2d.McDbXlsxTable.html#explode">explode</a></li><li><a href="./2d.McDbXlsxTable.html#getallappname">getAllAppName</a></li><li><a href="./2d.McDbXlsxTable.html#getallcolumnwidths">getAllColumnWidths</a></li><li><a href="./2d.McDbXlsxTable.html#getallrowheights">getAllRowHeights</a></li><li><a href="./2d.McDbXlsxTable.html#getarea">getArea</a></li><li><a href="./2d.McDbXlsxTable.html#getboundingbox">getBoundingBox</a></li><li><a href="./2d.McDbXlsxTable.html#getcellalignment">getCellAlignment</a></li><li><a href="./2d.McDbXlsxTable.html#getcellatpoint">getCellAtPoint</a></li><li><a href="./2d.McDbXlsxTable.html#getcellbackgroundcolor">getCellBackgroundColor</a></li><li><a href="./2d.McDbXlsxTable.html#getcellborderlinetype">getCellBorderLineType</a></li><li><a href="./2d.McDbXlsxTable.html#getcellborderlineweight">getCellBorderLineWeight</a></li><li><a href="./2d.McDbXlsxTable.html#getcellfromreference">getCellFromReference</a></li><li><a href="./2d.McDbXlsxTable.html#getcellgeometry">getCellGeometry</a></li><li><a href="./2d.McDbXlsxTable.html#getcellreference">getCellReference</a></li><li><a href="./2d.McDbXlsxTable.html#getcellstyles">getCellStyles</a></li><li><a href="./2d.McDbXlsxTable.html#getcelltextangle">getCellTextAngle</a></li><li><a href="./2d.McDbXlsxTable.html#getcelltextcolor">getCellTextColor</a></li><li><a href="./2d.McDbXlsxTable.html#getcelltextstyle">getCellTextStyle</a></li><li><a href="./2d.McDbXlsxTable.html#getcelltextvalue">getCellTextValue</a></li><li><a href="./2d.McDbXlsxTable.html#getcellvalue">getCellValue</a></li><li><a href="./2d.McDbXlsxTable.html#getcellverticalalignment">getCellVerticalAlignment</a></li><li><a href="./2d.McDbXlsxTable.html#getcolumnwidth">getColumnWidth</a></li><li><a href="./2d.McDbXlsxTable.html#getdatabase">getDatabase</a></li><li><a href="./2d.McDbXlsxTable.html#getdatabaseindexid">getDatabaseIndexId</a></li><li><a href="./2d.McDbXlsxTable.html#getextensiondictionary">getExtensionDictionary</a></li><li><a href="./2d.McDbXlsxTable.html#getgrippoints">getGripPoints</a></li><li><a href="./2d.McDbXlsxTable.html#gethandle">getHandle</a></li><li><a href="./2d.McDbXlsxTable.html#getimp">getImp</a></li><li><a href="./2d.McDbXlsxTable.html#getjson">getJson</a></li><li><a href="./2d.McDbXlsxTable.html#getmergecells">getMergeCells</a></li><li><a href="./2d.McDbXlsxTable.html#getname">getName</a></li><li><a href="./2d.McDbXlsxTable.html#getobjectid">getObjectID</a></li><li><a href="./2d.McDbXlsxTable.html#getownerid">getOwnerID</a></li><li><a href="./2d.McDbXlsxTable.html#getrowheight">getRowHeight</a></li><li><a href="./2d.McDbXlsxTable.html#getselectcellbackgroundcolor">getSelectCellBackgroundColor</a></li><li><a href="./2d.McDbXlsxTable.html#getselectcelltextcolor">getSelectCellTextColor</a></li><li><a href="./2d.McDbXlsxTable.html#getselectedcell">getSelectedCell</a></li><li><a href="./2d.McDbXlsxTable.html#getselectedcellcount">getSelectedCellCount</a></li><li><a href="./2d.McDbXlsxTable.html#getselectedcells">getSelectedCells</a></li><li><a href="./2d.McDbXlsxTable.html#getselectionrange">getSelectionRange</a></li><li><a href="./2d.McDbXlsxTable.html#gettypename">getTypeName</a></li><li><a href="./2d.McDbXlsxTable.html#getxdata">getxData</a></li><li><a href="./2d.McDbXlsxTable.html#getxdatadouble">getxDataDouble</a></li><li><a href="./2d.McDbXlsxTable.html#getxdatalong">getxDataLong</a></li><li><a href="./2d.McDbXlsxTable.html#getxdatapoint">getxDataPoint</a></li><li><a href="./2d.McDbXlsxTable.html#getxdatastring">getxDataString</a></li><li><a href="./2d.McDbXlsxTable.html#hasunmergedcellsselected">hasUnmergedCellsSelected</a></li><li><a href="./2d.McDbXlsxTable.html#highlight">highlight</a></li><li><a href="./2d.McDbXlsxTable.html#inittempobject">initTempObject</a></li><li><a href="./2d.McDbXlsxTable.html#insertcolumn">insertColumn</a></li><li><a href="./2d.McDbXlsxTable.html#insertrow">insertRow</a></li><li><a href="./2d.McDbXlsxTable.html#iscellselected">isCellSelected</a></li><li><a href="./2d.McDbXlsxTable.html#iserased">isErased</a></li><li><a href="./2d.McDbXlsxTable.html#ishaveextensiondictionary">isHaveExtensionDictionary</a></li><li><a href="./2d.McDbXlsxTable.html#iskindof">isKindOf</a></li><li><a href="./2d.McDbXlsxTable.html#ismergedcellselected">isMergedCellSelected</a></li><li><a href="./2d.McDbXlsxTable.html#isnull">isNull</a></li><li><a href="./2d.McDbXlsxTable.html#mergecells">mergeCells</a></li><li><a href="./2d.McDbXlsxTable.html#mirror">mirror</a></li><li><a href="./2d.McDbXlsxTable.html#move">move</a></li><li><a href="./2d.McDbXlsxTable.html#movegrippointsat">moveGripPointsAt</a></li><li><a href="./2d.McDbXlsxTable.html#resetcolumnwidth">resetColumnWidth</a></li><li><a href="./2d.McDbXlsxTable.html#resetrowheight">resetRowHeight</a></li><li><a href="./2d.McDbXlsxTable.html#rotate">rotate</a></li><li><a href="./2d.McDbXlsxTable.html#rxinit">rxInit</a></li><li><a href="./2d.McDbXlsxTable.html#scaleentity">scaleEntity</a></li><li><a href="./2d.McDbXlsxTable.html#setalignment">setAlignment</a></li><li><a href="./2d.McDbXlsxTable.html#setbatchcellalignment">setBatchCellAlignment</a></li><li><a href="./2d.McDbXlsxTable.html#setbatchcellbackgroundcolor">setBatchCellBackgroundColor</a></li><li><a href="./2d.McDbXlsxTable.html#setbatchcellborderlinetype">setBatchCellBorderLineType</a></li><li><a href="./2d.McDbXlsxTable.html#setbatchcellborderlineweight">setBatchCellBorderLineWeight</a></li><li><a href="./2d.McDbXlsxTable.html#setbatchcelltextangle">setBatchCellTextAngle</a></li><li><a href="./2d.McDbXlsxTable.html#setbatchcelltextcolor">setBatchCellTextColor</a></li><li><a href="./2d.McDbXlsxTable.html#setbatchcelltextstyle">setBatchCellTextStyle</a></li><li><a href="./2d.McDbXlsxTable.html#setbatchcellverticalalignment">setBatchCellVerticalAlignment</a></li><li><a href="./2d.McDbXlsxTable.html#setcellalignment">setCellAlignment</a></li><li><a href="./2d.McDbXlsxTable.html#setcellalignmentbyref">setCellAlignmentByRef</a></li><li><a href="./2d.McDbXlsxTable.html#setcellbackgroundcolor">setCellBackgroundColor</a></li><li><a href="./2d.McDbXlsxTable.html#setcellbackgroundcolorbyref">setCellBackgroundColorByRef</a></li><li><a href="./2d.McDbXlsxTable.html#setcellborderlinetype">setCellBorderLineType</a></li><li><a href="./2d.McDbXlsxTable.html#setcellborderlinetypebyref">setCellBorderLineTypeByRef</a></li><li><a href="./2d.McDbXlsxTable.html#setcellborderlineweight">setCellBorderLineWeight</a></li><li><a href="./2d.McDbXlsxTable.html#setcellborderlineweightbyref">setCellBorderLineWeightByRef</a></li><li><a href="./2d.McDbXlsxTable.html#setcelltextangle">setCellTextAngle</a></li><li><a href="./2d.McDbXlsxTable.html#setcelltextanglebyref">setCellTextAngleByRef</a></li><li><a href="./2d.McDbXlsxTable.html#setcelltextcolor">setCellTextColor</a></li><li><a href="./2d.McDbXlsxTable.html#setcelltextcolorbyref">setCellTextColorByRef</a></li><li><a href="./2d.McDbXlsxTable.html#setcelltextstyle">setCellTextStyle</a></li><li><a href="./2d.McDbXlsxTable.html#setcelltextstylebyref">setCellTextStyleByRef</a></li><li><a href="./2d.McDbXlsxTable.html#setcellvalue">setCellValue</a></li><li><a href="./2d.McDbXlsxTable.html#setcellverticalalignment">setCellVerticalAlignment</a></li><li><a href="./2d.McDbXlsxTable.html#setcellverticalalignmentbyref">setCellVerticalAlignmentByRef</a></li><li><a href="./2d.McDbXlsxTable.html#setcolumnwidth">setColumnWidth</a></li><li><a href="./2d.McDbXlsxTable.html#setfromarray">setFromArray</a></li><li><a href="./2d.McDbXlsxTable.html#setfromjson">setFromJson</a></li><li><a href="./2d.McDbXlsxTable.html#setfromworkbook">setFromWorkbook</a></li><li><a href="./2d.McDbXlsxTable.html#setjson">setJson</a></li><li><a href="./2d.McDbXlsxTable.html#setmergecells">setMergeCells</a></li><li><a href="./2d.McDbXlsxTable.html#setrowheight">setRowHeight</a></li><li><a href="./2d.McDbXlsxTable.html#setselectcellbackgroundcolor">setSelectCellBackgroundColor</a></li><li><a href="./2d.McDbXlsxTable.html#setselectcelltextcolor">setSelectCellTextColor</a></li><li><a href="./2d.McDbXlsxTable.html#setselectedcell">setSelectedCell</a></li><li><a href="./2d.McDbXlsxTable.html#setselectedcells">setSelectedCells</a></li><li><a href="./2d.McDbXlsxTable.html#setverticalalignment">setVerticalAlignment</a></li><li><a href="./2d.McDbXlsxTable.html#setxdata">setxData</a></li><li><a href="./2d.McDbXlsxTable.html#setxdatadouble">setxDataDouble</a></li><li><a href="./2d.McDbXlsxTable.html#setxdatalong">setxDataLong</a></li><li><a href="./2d.McDbXlsxTable.html#setxdatapoint">setxDataPoint</a></li><li><a href="./2d.McDbXlsxTable.html#setxdatastring">setxDataString</a></li><li><a href="./2d.McDbXlsxTable.html#syncdata">syncData</a></li><li><a href="./2d.McDbXlsxTable.html#transformby">transformBy</a></li><li><a href="./2d.McDbXlsxTable.html#unerase">unErase</a></li><li><a href="./2d.McDbXlsxTable.html#unmergecells">unMergeCells</a></li><li><a href="./2d.McDbXlsxTable.html#updatedisplay">updateDisplay</a></li><li><a href="./2d.McDbXlsxTable.html#worlddraw">worldDraw</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new McDbXlsxTable</strong>(<code>imp?</code>)</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>imp?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#constructor">constructor</a></p><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="imp" tabindex="-1">imp <a class="header-anchor" href="#imp" aria-label="Permalink to &quot;imp&quot;">​</a></h3><p>• <strong>imp</strong>: <code>any</code> = <code>0</code></p><p>内部实现对象。</p><h4 id="inherited-from" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#imp">imp</a></p><h2 id="accessors-1" tabindex="-1">Accessors <a class="header-anchor" href="#accessors-1" aria-label="Permalink to &quot;Accessors&quot;">​</a></h2><h3 id="colwidth" tabindex="-1">colWidth <a class="header-anchor" href="#colwidth" aria-label="Permalink to &quot;colWidth&quot;">​</a></h3><p>• <code>get</code> <strong>colWidth</strong>(): <code>number</code></p><p>表格整体列宽</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>• <code>set</code> <strong>colWidth</strong>(<code>val</code>): <code>void</code></p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="colorindex" tabindex="-1">colorIndex <a class="header-anchor" href="#colorindex" aria-label="Permalink to &quot;colorIndex&quot;">​</a></h3><p>• <code>get</code> <strong>colorIndex</strong>(): <code>number</code></p><p>得到对象颜色索引</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity, ColorIndexType } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.colorIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ColorIndexType.kByblock;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ent.colorIndex)</span></span></code></pre></div><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><h4 id="inherited-from-1" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-1" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.colorIndex</p><p>• <code>set</code> <strong>colorIndex</strong>(<code>val</code>): <code>void</code></p><p>设置对象颜色索引</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">颜色索引（ColorIndexType）</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-2" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-2" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.colorIndex</p><hr><h3 id="draworder" tabindex="-1">drawOrder <a class="header-anchor" href="#draworder" aria-label="Permalink to &quot;drawOrder&quot;">​</a></h3><p>• <code>get</code> <strong>drawOrder</strong>(): <code>number</code></p><p>对象的显示顺序</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><h4 id="inherited-from-3" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-3" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.drawOrder</p><p>• <code>set</code> <strong>drawOrder</strong>(<code>order</code>): <code>void</code></p><p>对象的显示顺序</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp, MxCADSelectionSet } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ss </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADSelectionSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ss.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">userSelect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">选择对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//得到当前图上对象的最大，小最显示顺序.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minmaxOrder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().currentSpace.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMinMaxDrawOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 把对象放到最上面。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lOrder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minmaxOrder.maxDrawOrder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ss.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ent.drawOrder </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lOrder;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>order</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">顺序值</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-4" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-4" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.drawOrder</p><hr><h3 id="dxf0" tabindex="-1">dxf0 <a class="header-anchor" href="#dxf0" aria-label="Permalink to &quot;dxf0&quot;">​</a></h3><p>• <code>get</code> <strong>dxf0</strong>(): <code>string</code></p><p>得到对象的DXF组码的类型名，这个和AutoCAD中的DXF组码是一样。 比如直线的类型名为：McDbLine，DXF0组码值: LINE,DXF0组码值可以用来构造集时的类型过滤。</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="inherited-from-5" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-5" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.dxf0</p><hr><h3 id="layer" tabindex="-1">layer <a class="header-anchor" href="#layer" aria-label="Permalink to &quot;layer&quot;">​</a></h3><p>• <code>get</code> <strong>layer</strong>(): <code>string</code></p><p>得到对象图层名</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="inherited-from-6" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-6" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.layer</p><p>• <code>set</code> <strong>layer</strong>(<code>val</code>): <code>void</code></p><p>设置对象图层名</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.layer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;newLayerName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ent.layer)</span></span></code></pre></div><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">图层名</td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-7" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-7" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.layer</p><hr><h3 id="layerid" tabindex="-1">layerId <a class="header-anchor" href="#layerid" aria-label="Permalink to &quot;layerId&quot;">​</a></h3><p>• <code>get</code> <strong>layerId</strong>(): <a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><p>获取图层ID对象</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> layerId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.layerId;</span></span></code></pre></div><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><h4 id="inherited-from-8" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-8" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.layerId</p><p>• <code>set</code> <strong>layerId</strong>(<code>id</code>): <code>void</code></p><p>设置图层Id对象</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mxcad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> layerId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addLayer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;测试图层&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.layerId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layerId;</span></span></code></pre></div><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><a href="./2d.McObjectId.html"><code>McObjectId</code></a></td></tr></tbody></table><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-9" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-9" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.layerId</p><hr><h3 id="linetype" tabindex="-1">linetype <a class="header-anchor" href="#linetype" aria-label="Permalink to &quot;linetype&quot;">​</a></h3><p>• <code>get</code> <strong>linetype</strong>(): <code>string</code></p><p>得到对象线型名</p><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="inherited-from-10" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-10" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.linetype</p><p>• <code>set</code> <strong>linetype</strong>(<code>val</code>): <code>void</code></p><p>设置对象线型名</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.linetype </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MyLineType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ent.linetype)</span></span></code></pre></div><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">线型名</td></tr></tbody></table><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-11" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-11" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.linetype</p><hr><h3 id="linetypeid" tabindex="-1">linetypeId <a class="header-anchor" href="#linetypeid" aria-label="Permalink to &quot;linetypeId&quot;">​</a></h3><p>• <code>get</code> <strong>linetypeId</strong>(): <a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><p>获取实体对象线型ID</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> linetypeId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.linetypeId;</span></span></code></pre></div><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><h4 id="inherited-from-12" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-12" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.linetypeId</p><p>• <code>set</code> <strong>linetypeId</strong>(<code>id</code>): <code>void</code></p><p>设置实体对象线型ID</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mxcad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lineId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addLinetypeEx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TestMyLine&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;25,-5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.linetypeId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lineId;</span></span></code></pre></div><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><a href="./2d.McObjectId.html"><code>McObjectId</code></a></td></tr></tbody></table><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-13" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-13" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.linetypeId</p><hr><h3 id="linetypescale" tabindex="-1">linetypeScale <a class="header-anchor" href="#linetypescale" aria-label="Permalink to &quot;linetypeScale&quot;">​</a></h3><p>• <code>get</code> <strong>linetypeScale</strong>(): <code>number</code></p><p>得到对象线型比例</p><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><h4 id="inherited-from-14" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-14" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.linetypeScale</p><p>• <code>set</code> <strong>linetypeScale</strong>(<code>val</code>): <code>void</code></p><p>设置对象线型比例</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.linetypeScale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ent.linetypeScale)</span></span></code></pre></div><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">线型比例</td></tr></tbody></table><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-15" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-15" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.linetypeScale</p><hr><h3 id="lineweight" tabindex="-1">lineweight <a class="header-anchor" href="#lineweight" aria-label="Permalink to &quot;lineweight&quot;">​</a></h3><p>• <code>get</code> <strong>lineweight</strong>(): <code>number</code></p><p>得到对象线重</p><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><h4 id="inherited-from-16" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-16" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.lineweight</p><p>• <code>set</code> <strong>lineweight</strong>(<code>val</code>): <code>void</code></p><p>设置对象线重</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.lineweight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ent.lineweight)</span></span></code></pre></div><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">线重</td></tr></tbody></table><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-17" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-17" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.lineweight</p><hr><h3 id="normal" tabindex="-1">normal <a class="header-anchor" href="#normal" aria-label="Permalink to &quot;normal&quot;">​</a></h3><p>• <code>get</code> <strong>normal</strong>(): <a href="./2d.McGeVector3d.html"><code>McGeVector3d</code></a></p><p>返回对象的normal</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McGeVector3d.html"><code>McGeVector3d</code></a></p><h4 id="inherited-from-18" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-18" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.normal</p><p>• <code>set</code> <strong>normal</strong>(<code>val</code>): <code>void</code></p><p>设置对象的normal</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McGeVector3d.html"><code>McGeVector3d</code></a></td></tr></tbody></table><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-19" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-19" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.normal</p><hr><h3 id="objectname" tabindex="-1">objectName <a class="header-anchor" href="#objectname" aria-label="Permalink to &quot;objectName&quot;">​</a></h3><p>• <code>get</code> <strong>objectName</strong>(): <code>string</code></p><p>获取对象名称。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McRxObject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McRxObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj.objectName);</span></span></code></pre></div><h4 id="returns-21" tabindex="-1">Returns <a class="header-anchor" href="#returns-21" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>返回对象名</p><h4 id="inherited-from-20" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-20" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.objectName</p><hr><h3 id="position" tabindex="-1">position <a class="header-anchor" href="#position" aria-label="Permalink to &quot;position&quot;">​</a></h3><p>• <code>get</code> <strong>position</strong>(): <a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></p><p>表格位置和尺寸 - 渲染必需</p><h4 id="returns-22" tabindex="-1">Returns <a class="header-anchor" href="#returns-22" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></p><p>• <code>set</code> <strong>position</strong>(<code>val</code>): <code>void</code></p><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td></tr></tbody></table><h4 id="returns-23" tabindex="-1">Returns <a class="header-anchor" href="#returns-23" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="rowheight" tabindex="-1">rowHeight <a class="header-anchor" href="#rowheight" aria-label="Permalink to &quot;rowHeight&quot;">​</a></h3><p>• <code>get</code> <strong>rowHeight</strong>(): <code>number</code></p><p>表格整体行高</p><h4 id="returns-24" tabindex="-1">Returns <a class="header-anchor" href="#returns-24" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>• <code>set</code> <strong>rowHeight</strong>(<code>val</code>): <code>void</code></p><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="returns-25" tabindex="-1">Returns <a class="header-anchor" href="#returns-25" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="stylename" tabindex="-1">styleName <a class="header-anchor" href="#stylename" aria-label="Permalink to &quot;styleName&quot;">​</a></h3><p>• <code>get</code> <strong>styleName</strong>(): <code>string</code></p><p>表格样式名称</p><h4 id="returns-26" tabindex="-1">Returns <a class="header-anchor" href="#returns-26" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>• <code>set</code> <strong>styleName</strong>(<code>val</code>): <code>void</code></p><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-27" tabindex="-1">Returns <a class="header-anchor" href="#returns-27" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="textstyle" tabindex="-1">textStyle <a class="header-anchor" href="#textstyle" aria-label="Permalink to &quot;textStyle&quot;">​</a></h3><p>• <code>get</code> <strong>textStyle</strong>(): <code>string</code></p><p>得到对象文字样式</p><h4 id="returns-28" tabindex="-1">Returns <a class="header-anchor" href="#returns-28" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="inherited-from-21" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-21" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.textStyle</p><p>• <code>set</code> <strong>textStyle</strong>(<code>val</code>): <code>void</code></p><p>设置对象文字样式</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.textStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;st_style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">文字样式名</td></tr></tbody></table><h4 id="returns-29" tabindex="-1">Returns <a class="header-anchor" href="#returns-29" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-22" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-22" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.textStyle</p><hr><h3 id="textstyleid" tabindex="-1">textStyleId <a class="header-anchor" href="#textstyleid" aria-label="Permalink to &quot;textStyleId&quot;">​</a></h3><p>• <code>get</code> <strong>textStyleId</strong>(): <a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><p>获取实体文字样式</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> textStyleId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.textStyleId;</span></span></code></pre></div><h4 id="returns-30" tabindex="-1">Returns <a class="header-anchor" href="#returns-30" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><h4 id="inherited-from-23" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-23" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.textStyleId</p><p>• <code>set</code> <strong>textStyleId</strong>(<code>id</code>): <code>void</code></p><p>设置实体的文字样式</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mxcad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> textStyleId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addTextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyLineTypeTextStyle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;txt.shx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hztxt.shx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.textStyleId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textStyleId;</span></span></code></pre></div><h4 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><a href="./2d.McObjectId.html"><code>McObjectId</code></a></td></tr></tbody></table><h4 id="returns-31" tabindex="-1">Returns <a class="header-anchor" href="#returns-31" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-24" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-24" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.textStyleId</p><hr><h3 id="truecolor" tabindex="-1">trueColor <a class="header-anchor" href="#truecolor" aria-label="Permalink to &quot;trueColor&quot;">​</a></h3><p>• <code>get</code> <strong>trueColor</strong>(): <a href="./2d.McCmColor.html"><code>McCmColor</code></a></p><p>得到对象颜色</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity, McCmColor} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.trueColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McCmColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ent.trueColor)</span></span></code></pre></div><h4 id="returns-32" tabindex="-1">Returns <a class="header-anchor" href="#returns-32" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McCmColor.html"><code>McCmColor</code></a></p><h4 id="inherited-from-25" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-25" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.trueColor</p><p>• <code>set</code> <strong>trueColor</strong>(<code>val</code>): <code>void</code></p><p>设置对象颜色</p><h4 id="parameters-16" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-16" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McCmColor.html"><code>McCmColor</code></a></td></tr></tbody></table><h4 id="returns-33" tabindex="-1">Returns <a class="header-anchor" href="#returns-33" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-26" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-26" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.trueColor</p><hr><h3 id="visible" tabindex="-1">visible <a class="header-anchor" href="#visible" aria-label="Permalink to &quot;visible&quot;">​</a></h3><p>• <code>get</code> <strong>visible</strong>(): <code>boolean</code></p><p>对象是否可见</p><h4 id="returns-34" tabindex="-1">Returns <a class="header-anchor" href="#returns-34" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-27" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-27" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.visible</p><p>• <code>set</code> <strong>visible</strong>(<code>val</code>): <code>void</code></p><p>设置是否可见</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.visible </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ent.visible)</span></span></code></pre></div><h4 id="parameters-17" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-17" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">布尔值</td></tr></tbody></table><h4 id="returns-35" tabindex="-1">Returns <a class="header-anchor" href="#returns-35" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-28" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-28" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p>McDbCustomEntity.visible</p><hr><h3 id="xlsxdata" tabindex="-1">xlsxData <a class="header-anchor" href="#xlsxdata" aria-label="Permalink to &quot;xlsxData&quot;">​</a></h3><p>• <code>get</code> <strong>xlsxData</strong>(): <code>string</code></p><h4 id="returns-36" tabindex="-1">Returns <a class="header-anchor" href="#returns-36" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>• <code>set</code> <strong>xlsxData</strong>(<code>data</code>): <code>void</code></p><h4 id="parameters-18" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-18" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-37" tabindex="-1">Returns <a class="header-anchor" href="#returns-37" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="intersectwith" tabindex="-1">IntersectWith <a class="header-anchor" href="#intersectwith" aria-label="Permalink to &quot;IntersectWith&quot;">​</a></h3><p>▸ <strong>IntersectWith</strong>(<code>intersectObject</code>, <code>exOption</code>): <a href="./2d.McGePoint3dArray.html"><code>McGePoint3dArray</code></a></p><p>与其他实体相交, 得到交点</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbLine, McDb } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> line1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> line2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ptArr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> line1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IntersectWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(line2, McDb.Intersect.kExtendBoth)</span></span></code></pre></div><h4 id="parameters-19" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-19" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>intersectObject</code></td><td style="text-align:left;"><a href="./2d.McDbEntity.html"><code>McDbEntity</code></a></td><td style="text-align:left;">需要相交的是实体对象</td></tr><tr><td style="text-align:left;"><code>exOption</code></td><td style="text-align:left;"><a href="./../enums/2d.McDb.Intersect.html"><code>Intersect</code></a></td><td style="text-align:left;">相交的选项</td></tr></tbody></table><h4 id="returns-38" tabindex="-1">Returns <a class="header-anchor" href="#returns-38" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McGePoint3dArray.html"><code>McGePoint3dArray</code></a></p><p>得到所有交点</p><h4 id="inherited-from-29" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-29" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#intersectwith">IntersectWith</a></p><hr><h3 id="addselectedcell" tabindex="-1">addSelectedCell <a class="header-anchor" href="#addselectedcell" aria-label="Permalink to &quot;addSelectedCell&quot;">​</a></h3><p>▸ <strong>addSelectedCell</strong>(<code>row</code>, <code>col</code>): <code>void</code></p><p>添加一个单元格到选中集合</p><h4 id="parameters-20" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-20" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-39" tabindex="-1">Returns <a class="header-anchor" href="#returns-39" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="assertobjectmodification" tabindex="-1">assertObjectModification <a class="header-anchor" href="#assertobjectmodification" aria-label="Permalink to &quot;assertObjectModification&quot;">​</a></h3><p>▸ <strong>assertObjectModification</strong>(<code>autoUndo?</code>): <code>number</code></p><p>设置对象被改变的状态，可自动触发更新显示函数，更新显示。 比如块表记录更新了，需要通知块引用更新显示，可以调用该函数。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertObjectModification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="parameters-21" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-21" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>autoUndo</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>false</code></td></tr></tbody></table><h4 id="returns-40" tabindex="-1">Returns <a class="header-anchor" href="#returns-40" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><h4 id="inherited-from-30" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-30" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#assertobjectmodification">assertObjectModification</a></p><hr><h3 id="calculatetabledimensions" tabindex="-1">calculateTableDimensions <a class="header-anchor" href="#calculatetabledimensions" aria-label="Permalink to &quot;calculateTableDimensions&quot;">​</a></h3><p>▸ <strong>calculateTableDimensions</strong>(): <code>Object</code></p><p>计算表格尺寸</p><h4 id="returns-41" tabindex="-1">Returns <a class="header-anchor" href="#returns-41" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>height</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>width</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><hr><h3 id="clearselectedcell" tabindex="-1">clearSelectedCell <a class="header-anchor" href="#clearselectedcell" aria-label="Permalink to &quot;clearSelectedCell&quot;">​</a></h3><p>▸ <strong>clearSelectedCell</strong>(): <code>void</code></p><p>清除当前选中的单元格</p><h4 id="returns-42" tabindex="-1">Returns <a class="header-anchor" href="#returns-42" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="clone" tabindex="-1">clone <a class="header-anchor" href="#clone" aria-label="Permalink to &quot;clone&quot;">​</a></h3><p>▸ <strong>clone</strong>(): <code>null</code> | <a href="./2d.McDbObject.html"><code>McDbObject</code></a></p><p>复制实体</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbCustomEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> customEnt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 构造新自定义实体对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cloneEnt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> customEnt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 复制实体</span></span></code></pre></div><h4 id="returns-43" tabindex="-1">Returns <a class="header-anchor" href="#returns-43" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | <a href="./2d.McDbObject.html"><code>McDbObject</code></a></p><h4 id="inherited-from-31" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-31" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#clone">clone</a></p><hr><h3 id="create" tabindex="-1">create <a class="header-anchor" href="#create" aria-label="Permalink to &quot;create&quot;">​</a></h3><p>▸ <strong>create</strong>(<code>imp</code>): <a href="./2d.McDbXlsxTable.html"><code>McDbXlsxTable</code></a></p><p>新创建一个自定义对象 (默认调用该对象的构造函数来创建新的对象)</p><h4 id="parameters-22" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-22" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>imp</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-44" tabindex="-1">Returns <a class="header-anchor" href="#returns-44" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McDbXlsxTable.html"><code>McDbXlsxTable</code></a></p><h4 id="overrides-1" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-1" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#create">create</a></p><hr><h3 id="createextensiondictionary" tabindex="-1">createExtensionDictionary <a class="header-anchor" href="#createextensiondictionary" aria-label="Permalink to &quot;createExtensionDictionary&quot;">​</a></h3><p>▸ <strong>createExtensionDictionary</strong>(): <code>boolean</code></p><p>创建对象的扩展字典数据.</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createExtensionDictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-45" tabindex="-1">Returns <a class="header-anchor" href="#returns-45" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-32" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-32" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#createextensiondictionary">createExtensionDictionary</a></p><hr><h3 id="deletecolumn" tabindex="-1">deleteColumn <a class="header-anchor" href="#deletecolumn" aria-label="Permalink to &quot;deleteColumn&quot;">​</a></h3><p>▸ <strong>deleteColumn</strong>(<code>onSelectionChange?</code>): <code>void</code></p><p>删除选中的列</p><h4 id="parameters-23" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-23" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-46" tabindex="-1">Returns <a class="header-anchor" href="#returns-46" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="deleterow" tabindex="-1">deleteRow <a class="header-anchor" href="#deleterow" aria-label="Permalink to &quot;deleteRow&quot;">​</a></h3><p>▸ <strong>deleteRow</strong>(<code>onSelectionChange?</code>): <code>void</code></p><p>删除选中的行</p><h4 id="parameters-24" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-24" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-47" tabindex="-1">Returns <a class="header-anchor" href="#returns-47" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="deletexdata" tabindex="-1">deleteXData <a class="header-anchor" href="#deletexdata" aria-label="Permalink to &quot;deleteXData&quot;">​</a></h3><p>▸ <strong>deleteXData</strong>(<code>appName</code>): <code>boolean</code></p><p>删除实体指定应用程序名称相关的数据</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCADUiPrEntity, McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADUiPrEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;选择对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">McDbEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteXData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DataName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //删除成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //删除失败</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-25" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-25" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr></tbody></table><h4 id="returns-48" tabindex="-1">Returns <a class="header-anchor" href="#returns-48" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-33" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-33" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#deletexdata">deleteXData</a></p><hr><h3 id="disabledisplay" tabindex="-1">disableDisplay <a class="header-anchor" href="#disabledisplay" aria-label="Permalink to &quot;disableDisplay&quot;">​</a></h3><p>▸ <strong>disableDisplay</strong>(<code>isDisable</code>): <code>void</code></p><p>禁用对象的自动更新显示.</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbLine } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> line1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">line1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disableDisplay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-26" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-26" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>isDisable</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">是否禁用对象自动更新显示</td></tr></tbody></table><h4 id="returns-49" tabindex="-1">Returns <a class="header-anchor" href="#returns-49" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-34" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-34" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#disabledisplay">disableDisplay</a></p><hr><h3 id="dwginfields" tabindex="-1">dwgInFields <a class="header-anchor" href="#dwginfields" aria-label="Permalink to &quot;dwgInFields&quot;">​</a></h3><p>▸ <strong>dwgInFields</strong>(<code>filter</code>): <code>boolean</code></p><p>从 DWG 文件中读取自定义实体的数据字段</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbCustomEntity, IMcDbDwgFiler } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 新创建 McDbTestLineCustomEntity 类继承 McDbCustomEntity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbTestLineCustomEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 定义McDbTestLineCustomEntity内部的点对象 pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 读取自定义实体的数据字段pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dwgInFields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IMcDbDwgFiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pt1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).val;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pt2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).val;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h4 id="parameters-27" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-27" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>filter</code></td><td style="text-align:left;"><a href="./2d.IMcDbDwgFiler.html"><code>IMcDbDwgFiler</code></a></td></tr></tbody></table><h4 id="returns-50" tabindex="-1">Returns <a class="header-anchor" href="#returns-50" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="overrides-2" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-2" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#dwginfields">dwgInFields</a></p><hr><h3 id="dwgoutfields" tabindex="-1">dwgOutFields <a class="header-anchor" href="#dwgoutfields" aria-label="Permalink to &quot;dwgOutFields&quot;">​</a></h3><p>▸ <strong>dwgOutFields</strong>(<code>filter</code>): <code>boolean</code></p><p>将自定义实体的数据字段写入到 DWG 文件中</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 新创建 McDbTestLineCustomEntity 类继承 McDbCustomEntity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbCustomEntity, IMcDbDwgFiler } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbTestLineCustomEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 定义McDbTestLineCustomEntity内部的点对象 pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 写入自定义实体的数据字段pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dwgOutFields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IMcDbDwgFiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       filter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writePoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pt1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       filter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writePoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pt2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span></code></pre></div><h4 id="parameters-28" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-28" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>filter</code></td><td style="text-align:left;"><a href="./2d.IMcDbDwgFiler.html"><code>IMcDbDwgFiler</code></a></td></tr></tbody></table><h4 id="returns-51" tabindex="-1">Returns <a class="header-anchor" href="#returns-51" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="overrides-3" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-3" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#dwgoutfields">dwgOutFields</a></p><hr><h3 id="erase" tabindex="-1">erase <a class="header-anchor" href="#erase" aria-label="Permalink to &quot;erase&quot;">​</a></h3><p>▸ <strong>erase</strong>(): <code>boolean</code></p><p>删除对象。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">erase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span></span></code></pre></div><h4 id="returns-52" tabindex="-1">Returns <a class="header-anchor" href="#returns-52" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否删除成功。</p><h4 id="inherited-from-35" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-35" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#erase">erase</a></p><hr><h3 id="explode" tabindex="-1">explode <a class="header-anchor" href="#explode" aria-label="Permalink to &quot;explode&quot;">​</a></h3><p>▸ <strong>explode</strong>(): <a href="./2d.MxCADResbuf.html"><code>MxCADResbuf</code></a></p><p>打碎对象，返回打后对象数据链表</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity, MxCADResbuf } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取目标对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getEnt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADUiPrEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getEnt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;选择打碎对象:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getEnt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">McDbEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打碎对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> retExplode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADResbuf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">explode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (retExplode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iExplodeConut </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> retExplode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetCount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iExplodeConut; j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tmpobj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> retExplode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AtObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(j).val;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tmpobj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tmpobj);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span></code></pre></div><h4 id="returns-53" tabindex="-1">Returns <a class="header-anchor" href="#returns-53" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.MxCADResbuf.html"><code>MxCADResbuf</code></a></p><p>resbuf 数据</p><h4 id="inherited-from-36" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-36" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#explode">explode</a></p><hr><h3 id="getallappname" tabindex="-1">getAllAppName <a class="header-anchor" href="#getallappname" aria-label="Permalink to &quot;getAllAppName&quot;">​</a></h3><p>▸ <strong>getAllAppName</strong>(): <a href="./2d.McGeStringArray.html"><code>McGeStringArray</code></a></p><p>获取实体中包含的所有 XData 记录的应用程序名（AppName）</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> appNames</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAllAppName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(appNames);</span></span></code></pre></div><h4 id="returns-54" tabindex="-1">Returns <a class="header-anchor" href="#returns-54" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McGeStringArray.html"><code>McGeStringArray</code></a></p><h4 id="inherited-from-37" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-37" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getallappname">getAllAppName</a></p><hr><h3 id="getallcolumnwidths" tabindex="-1">getAllColumnWidths <a class="header-anchor" href="#getallcolumnwidths" aria-label="Permalink to &quot;getAllColumnWidths&quot;">​</a></h3><p>▸ <strong>getAllColumnWidths</strong>(): <code>IColumnWidth</code>[]</p><p>获取所有列宽设置</p><h4 id="returns-55" tabindex="-1">Returns <a class="header-anchor" href="#returns-55" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>IColumnWidth</code>[]</p><hr><h3 id="getallrowheights" tabindex="-1">getAllRowHeights <a class="header-anchor" href="#getallrowheights" aria-label="Permalink to &quot;getAllRowHeights&quot;">​</a></h3><p>▸ <strong>getAllRowHeights</strong>(): <code>IRowHeight</code>[]</p><p>获取所有行高设置</p><h4 id="returns-56" tabindex="-1">Returns <a class="header-anchor" href="#returns-56" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>IRowHeight</code>[]</p><hr><h3 id="getarea" tabindex="-1">getArea <a class="header-anchor" href="#getarea" aria-label="Permalink to &quot;getArea&quot;">​</a></h3><p>▸ <strong>getArea</strong>(): <code>Object</code></p><p>计算面积</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McGePoint3d, McDbCircle } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> circle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbCircle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(center, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> area</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> circle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getArea</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;圆面积：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, area)</span></span></code></pre></div><h4 id="returns-57" tabindex="-1">Returns <a class="header-anchor" href="#returns-57" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>val 面积值 | ret 是否获取成功</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="inherited-from-38" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-38" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getarea">getArea</a></p><hr><h3 id="getboundingbox" tabindex="-1">getBoundingBox <a class="header-anchor" href="#getboundingbox" aria-label="Permalink to &quot;getBoundingBox&quot;">​</a></h3><p>▸ <strong>getBoundingBox</strong>(): <code>Object</code></p><p>得到对象的最小外包</p><h4 id="returns-58" tabindex="-1">Returns <a class="header-anchor" href="#returns-58" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>maxPt</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td></tr><tr><td style="text-align:left;"><code>minPt</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td></tr><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr></tbody></table><h4 id="inherited-from-39" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-39" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getboundingbox">getBoundingBox</a></p><hr><h3 id="getcellalignment" tabindex="-1">getCellAlignment <a class="header-anchor" href="#getcellalignment" aria-label="Permalink to &quot;getCellAlignment&quot;">​</a></h3><p>▸ <strong>getCellAlignment</strong>(<code>row</code>, <code>col</code>): <code>undefined</code> | <code>&quot;center&quot;</code> | <code>&quot;left&quot;</code> | <code>&quot;right&quot;</code></p><p>获取单元格水平对齐方式</p><h4 id="parameters-29" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-29" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-59" tabindex="-1">Returns <a class="header-anchor" href="#returns-59" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>&quot;center&quot;</code> | <code>&quot;left&quot;</code> | <code>&quot;right&quot;</code></p><p>水平对齐方式，如果未设置则返回&#39;left&#39;</p><hr><h3 id="getcellatpoint" tabindex="-1">getCellAtPoint <a class="header-anchor" href="#getcellatpoint" aria-label="Permalink to &quot;getCellAtPoint&quot;">​</a></h3><p>▸ <strong>getCellAtPoint</strong>(<code>point</code>): <code>null</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }</p><p>将CAD坐标点转换为表格中的单元格位置</p><h4 id="parameters-30" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-30" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>point</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td><td style="text-align:left;">CAD空间中的三维点</td></tr></tbody></table><h4 id="returns-60" tabindex="-1">Returns <a class="header-anchor" href="#returns-60" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }</p><p>单元格位置 {row, col} 或 null (当点不在表格内时)</p><hr><h3 id="getcellbackgroundcolor" tabindex="-1">getCellBackgroundColor <a class="header-anchor" href="#getcellbackgroundcolor" aria-label="Permalink to &quot;getCellBackgroundColor&quot;">​</a></h3><p>▸ <strong>getCellBackgroundColor</strong>(<code>row</code>, <code>col</code>): <code>undefined</code> | <code>null</code> | <code>number</code></p><p>获取单元格背景颜色</p><h4 id="parameters-31" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-31" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-61" tabindex="-1">Returns <a class="header-anchor" href="#returns-61" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>null</code> | <code>number</code></p><p>单元格背景颜色，如果未设置则返回null</p><hr><h3 id="getcellborderlinetype" tabindex="-1">getCellBorderLineType <a class="header-anchor" href="#getcellborderlinetype" aria-label="Permalink to &quot;getCellBorderLineType&quot;">​</a></h3><p>▸ <strong>getCellBorderLineType</strong>(<code>row</code>, <code>col</code>): <code>undefined</code> | <code>string</code></p><p>获取单元格边框线型</p><h4 id="parameters-32" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-32" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-62" tabindex="-1">Returns <a class="header-anchor" href="#returns-62" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>string</code></p><p>单元格边框线型，如果未设置则返回undefined</p><hr><h3 id="getcellborderlineweight" tabindex="-1">getCellBorderLineWeight <a class="header-anchor" href="#getcellborderlineweight" aria-label="Permalink to &quot;getCellBorderLineWeight&quot;">​</a></h3><p>▸ <strong>getCellBorderLineWeight</strong>(<code>row</code>, <code>col</code>): <code>undefined</code> | <code>number</code></p><p>获取单元格边框线宽</p><h4 id="parameters-33" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-33" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-63" tabindex="-1">Returns <a class="header-anchor" href="#returns-63" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>number</code></p><p>单元格边框线宽，如果未设置则返回undefined</p><hr><h3 id="getcellfromreference" tabindex="-1">getCellFromReference <a class="header-anchor" href="#getcellfromreference" aria-label="Permalink to &quot;getCellFromReference&quot;">​</a></h3><p>▸ <strong>getCellFromReference</strong>(<code>cellRef</code>): <code>null</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }</p><p>从A1格式引用获取单元格索引</p><h4 id="parameters-34" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-34" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr></tbody></table><h4 id="returns-64" tabindex="-1">Returns <a class="header-anchor" href="#returns-64" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }</p><p>单元格索引 {row, col} 或 null (当引用无效时)</p><hr><h3 id="getcellgeometry" tabindex="-1">getCellGeometry <a class="header-anchor" href="#getcellgeometry" aria-label="Permalink to &quot;getCellGeometry&quot;">​</a></h3><p>▸ <strong>getCellGeometry</strong>(<code>row</code>, <code>col</code>): <code>null</code> | { <code>max</code>: <a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a> ; <code>min</code>: <a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a> }</p><p>获取指定单元格的几何范围</p><h4 id="parameters-35" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-35" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-65" tabindex="-1">Returns <a class="header-anchor" href="#returns-65" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | { <code>max</code>: <a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a> ; <code>min</code>: <a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a> }</p><p>单元格的几何范围 { min: McGePoint3d, max: McGePoint3d } 或 null (当单元格不存在时)</p><hr><h3 id="getcellreference" tabindex="-1">getCellReference <a class="header-anchor" href="#getcellreference" aria-label="Permalink to &quot;getCellReference&quot;">​</a></h3><p>▸ <strong>getCellReference</strong>(<code>row</code>, <code>col</code>): <code>string</code></p><p>获取指定单元格的A1格式引用</p><h4 id="parameters-36" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-36" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-66" tabindex="-1">Returns <a class="header-anchor" href="#returns-66" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</p><hr><h3 id="getcellstyles" tabindex="-1">getCellStyles <a class="header-anchor" href="#getcellstyles" aria-label="Permalink to &quot;getCellStyles&quot;">​</a></h3><p>▸ <strong>getCellStyles</strong>(): <code>CellStyleInfo</code></p><p>获取单元格的样式</p><h4 id="returns-67" tabindex="-1">Returns <a class="header-anchor" href="#returns-67" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>CellStyleInfo</code></p><hr><h3 id="getcelltextangle" tabindex="-1">getCellTextAngle <a class="header-anchor" href="#getcelltextangle" aria-label="Permalink to &quot;getCellTextAngle&quot;">​</a></h3><p>▸ <strong>getCellTextAngle</strong>(<code>row</code>, <code>col</code>): <code>undefined</code> | <code>number</code></p><p>获取单元格文本角度</p><h4 id="parameters-37" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-37" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-68" tabindex="-1">Returns <a class="header-anchor" href="#returns-68" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>number</code></p><p>单元格文本角度，如果未设置则返回undefined</p><hr><h3 id="getcelltextcolor" tabindex="-1">getCellTextColor <a class="header-anchor" href="#getcelltextcolor" aria-label="Permalink to &quot;getCellTextColor&quot;">​</a></h3><p>▸ <strong>getCellTextColor</strong>(<code>row</code>, <code>col</code>): <code>undefined</code> | <code>null</code> | <code>number</code></p><p>获取单元格文本颜色</p><h4 id="parameters-38" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-38" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-69" tabindex="-1">Returns <a class="header-anchor" href="#returns-69" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>null</code> | <code>number</code></p><p>单元格文本颜色，如果未设置则返回null</p><hr><h3 id="getcelltextstyle" tabindex="-1">getCellTextStyle <a class="header-anchor" href="#getcelltextstyle" aria-label="Permalink to &quot;getCellTextStyle&quot;">​</a></h3><p>▸ <strong>getCellTextStyle</strong>(<code>row</code>, <code>col</code>): <code>undefined</code> | <code>string</code></p><p>获取单元格文本样式</p><h4 id="parameters-39" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-39" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-70" tabindex="-1">Returns <a class="header-anchor" href="#returns-70" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>string</code></p><p>单元格文本样式，如果未设置则返回undefined</p><hr><h3 id="getcelltextvalue" tabindex="-1">getCellTextValue <a class="header-anchor" href="#getcelltextvalue" aria-label="Permalink to &quot;getCellTextValue&quot;">​</a></h3><p>▸ <strong>getCellTextValue</strong>(<code>row</code>, <code>col</code>): <code>string</code></p><p>获取单元格的纯文本值（如果是Slate格式则提取文本）</p><h4 id="parameters-40" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-40" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-71" tabindex="-1">Returns <a class="header-anchor" href="#returns-71" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>单元格的纯文本值</p><hr><h3 id="getcellvalue" tabindex="-1">getCellValue <a class="header-anchor" href="#getcellvalue" aria-label="Permalink to &quot;getCellValue&quot;">​</a></h3><p>▸ <strong>getCellValue</strong>(<code>row</code>, <code>col</code>): <code>any</code></p><p>获取指定单元格的值</p><h4 id="parameters-41" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-41" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-72" tabindex="-1">Returns <a class="header-anchor" href="#returns-72" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>any</code></p><p>单元格值</p><hr><h3 id="getcellverticalalignment" tabindex="-1">getCellVerticalAlignment <a class="header-anchor" href="#getcellverticalalignment" aria-label="Permalink to &quot;getCellVerticalAlignment&quot;">​</a></h3><p>▸ <strong>getCellVerticalAlignment</strong>(<code>row</code>, <code>col</code>): <code>undefined</code> | <code>&quot;top&quot;</code> | <code>&quot;bottom&quot;</code> | <code>&quot;middle&quot;</code></p><p>获取单元格垂直对齐方式</p><h4 id="parameters-42" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-42" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-73" tabindex="-1">Returns <a class="header-anchor" href="#returns-73" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>&quot;top&quot;</code> | <code>&quot;bottom&quot;</code> | <code>&quot;middle&quot;</code></p><p>垂直对齐方式，如果未设置则返回&#39;top&#39;</p><hr><h3 id="getcolumnwidth" tabindex="-1">getColumnWidth <a class="header-anchor" href="#getcolumnwidth" aria-label="Permalink to &quot;getColumnWidth&quot;">​</a></h3><p>▸ <strong>getColumnWidth</strong>(<code>col</code>): <code>number</code></p><p>获取指定列的宽度</p><h4 id="parameters-43" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-43" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-74" tabindex="-1">Returns <a class="header-anchor" href="#returns-74" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>列宽度，如果未设置则返回默认列宽</p><hr><h3 id="getdatabase" tabindex="-1">getDatabase <a class="header-anchor" href="#getdatabase" aria-label="Permalink to &quot;getDatabase&quot;">​</a></h3><p>▸ <strong>getDatabase</strong>(): <a href="./2d.McDbDatabase.html"><code>McDbDatabase</code></a></p><p>得到对象所在的数据库</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-75" tabindex="-1">Returns <a class="header-anchor" href="#returns-75" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McDbDatabase.html"><code>McDbDatabase</code></a></p><p>返回数据库</p><h4 id="inherited-from-40" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-40" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getdatabase">getDatabase</a></p><hr><h3 id="getdatabaseindexid" tabindex="-1">getDatabaseIndexId <a class="header-anchor" href="#getdatabaseindexid" aria-label="Permalink to &quot;getDatabaseIndexId&quot;">​</a></h3><p>▸ <strong>getDatabaseIndexId</strong>(): <code>number</code></p><p>获取对象的索引ID</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDatabaseIndexId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-76" tabindex="-1">Returns <a class="header-anchor" href="#returns-76" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><h4 id="inherited-from-41" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-41" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getdatabaseindexid">getDatabaseIndexId</a></p><hr><h3 id="getextensiondictionary" tabindex="-1">getExtensionDictionary <a class="header-anchor" href="#getextensiondictionary" aria-label="Permalink to &quot;getExtensionDictionary&quot;">​</a></h3><p>▸ <strong>getExtensionDictionary</strong>(): <a href="./2d.McDbDictionary.html"><code>McDbDictionary</code></a></p><p>得到对象的扩展字典数据.</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOwnerID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-77" tabindex="-1">Returns <a class="header-anchor" href="#returns-77" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McDbDictionary.html"><code>McDbDictionary</code></a></p><p>扩展字典数据</p><h4 id="inherited-from-42" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-42" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getextensiondictionary">getExtensionDictionary</a></p><hr><h3 id="getgrippoints" tabindex="-1">getGripPoints <a class="header-anchor" href="#getgrippoints" aria-label="Permalink to &quot;getGripPoints&quot;">​</a></h3><p>▸ <strong>getGripPoints</strong>(): <a href="./2d.McGePoint3dArray.html"><code>McGePoint3dArray</code></a></p><p>获取自定义对象的夹点。</p><h4 id="returns-78" tabindex="-1">Returns <a class="header-anchor" href="#returns-78" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McGePoint3dArray.html"><code>McGePoint3dArray</code></a></p><p>夹点对象数组</p><h4 id="overrides-4" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-4" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getgrippoints">getGripPoints</a></p><hr><h3 id="gethandle" tabindex="-1">getHandle <a class="header-anchor" href="#gethandle" aria-label="Permalink to &quot;getHandle&quot;">​</a></h3><p>▸ <strong>getHandle</strong>(): <code>string</code></p><p>得到对象句柄</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-79" tabindex="-1">Returns <a class="header-anchor" href="#returns-79" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>返回对象句柄</p><h4 id="inherited-from-43" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-43" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#gethandle">getHandle</a></p><hr><h3 id="getimp" tabindex="-1">getImp <a class="header-anchor" href="#getimp" aria-label="Permalink to &quot;getImp&quot;">​</a></h3><p>▸ <strong>getImp</strong>(): <code>any</code></p><p>获取内部实现对象。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McRxObject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McRxObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> imp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getImp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-80" tabindex="-1">Returns <a class="header-anchor" href="#returns-80" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>any</code></p><p>内部实现对象。</p><h4 id="inherited-from-44" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-44" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getimp">getImp</a></p><hr><h3 id="getjson" tabindex="-1">getJson <a class="header-anchor" href="#getjson" aria-label="Permalink to &quot;getJson&quot;">​</a></h3><p>▸ <strong>getJson</strong>(): <code>string</code></p><p>获取 JSON 格式的字符串。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McRxObject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McRxObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="returns-81" tabindex="-1">Returns <a class="header-anchor" href="#returns-81" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>JSON 格式的字符串。</p><h4 id="inherited-from-45" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-45" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getjson">getJson</a></p><hr><h3 id="getmergecells" tabindex="-1">getMergeCells <a class="header-anchor" href="#getmergecells" aria-label="Permalink to &quot;getMergeCells&quot;">​</a></h3><p>▸ <strong>getMergeCells</strong>(): <code>IMergeCellInfo</code>[]</p><p>获取合并单元格信息</p><h4 id="returns-82" tabindex="-1">Returns <a class="header-anchor" href="#returns-82" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>IMergeCellInfo</code>[]</p><hr><h3 id="getname" tabindex="-1">getName <a class="header-anchor" href="#getname" aria-label="Permalink to &quot;getName&quot;">​</a></h3><p>▸ <strong>getName</strong>(): <code>string</code></p><p>获取自定义对象名称</p><h4 id="returns-83" tabindex="-1">Returns <a class="header-anchor" href="#returns-83" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><h4 id="inherited-from-46" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-46" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getname">getName</a></p><hr><h3 id="getobjectid" tabindex="-1">getObjectID <a class="header-anchor" href="#getobjectid" aria-label="Permalink to &quot;getObjectID&quot;">​</a></h3><p>▸ <strong>getObjectID</strong>(): <a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><p>获取对象 ID。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbObject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getObjectID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-84" tabindex="-1">Returns <a class="header-anchor" href="#returns-84" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.McObjectId.html"><code>McObjectId</code></a></p><p>对象 ID。</p><h4 id="inherited-from-47" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-47" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getobjectid">getObjectID</a></p><hr><h3 id="getownerid" tabindex="-1">getOwnerID <a class="header-anchor" href="#getownerid" aria-label="Permalink to &quot;getOwnerID&quot;">​</a></h3><p>▸ <strong>getOwnerID</strong>(): <code>number</code></p><p>得到对象拥用者的id</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOwnerID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-85" tabindex="-1">Returns <a class="header-anchor" href="#returns-85" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><h4 id="inherited-from-48" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-48" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getownerid">getOwnerID</a></p><hr><h3 id="getrowheight" tabindex="-1">getRowHeight <a class="header-anchor" href="#getrowheight" aria-label="Permalink to &quot;getRowHeight&quot;">​</a></h3><p>▸ <strong>getRowHeight</strong>(<code>row</code>): <code>number</code></p><p>获取指定行的高度</p><h4 id="parameters-44" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-44" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr></tbody></table><h4 id="returns-86" tabindex="-1">Returns <a class="header-anchor" href="#returns-86" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>行高度，如果未设置则返回默认行高</p><hr><h3 id="getselectcellbackgroundcolor" tabindex="-1">getSelectCellBackgroundColor <a class="header-anchor" href="#getselectcellbackgroundcolor" aria-label="Permalink to &quot;getSelectCellBackgroundColor&quot;">​</a></h3><p>▸ <strong>getSelectCellBackgroundColor</strong>(): <code>undefined</code> | <code>null</code> | <code>number</code></p><p>获取选中单元格的背景颜色</p><h4 id="returns-87" tabindex="-1">Returns <a class="header-anchor" href="#returns-87" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>null</code> | <code>number</code></p><hr><h3 id="getselectcelltextcolor" tabindex="-1">getSelectCellTextColor <a class="header-anchor" href="#getselectcelltextcolor" aria-label="Permalink to &quot;getSelectCellTextColor&quot;">​</a></h3><p>▸ <strong>getSelectCellTextColor</strong>(): <code>undefined</code> | <code>null</code> | <code>number</code></p><p>获取选中单元格的文本颜色</p><h4 id="returns-88" tabindex="-1">Returns <a class="header-anchor" href="#returns-88" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code> | <code>null</code> | <code>number</code></p><hr><h3 id="getselectedcell" tabindex="-1">getSelectedCell <a class="header-anchor" href="#getselectedcell" aria-label="Permalink to &quot;getSelectedCell&quot;">​</a></h3><p>▸ <strong>getSelectedCell</strong>(): <code>null</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }</p><p>获取当前选中的单元格</p><h4 id="returns-89" tabindex="-1">Returns <a class="header-anchor" href="#returns-89" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }</p><p>第一个选中的单元格，如果没有选中则返回null</p><hr><h3 id="getselectedcellcount" tabindex="-1">getSelectedCellCount <a class="header-anchor" href="#getselectedcellcount" aria-label="Permalink to &quot;getSelectedCellCount&quot;">​</a></h3><p>▸ <strong>getSelectedCellCount</strong>(): <code>number</code></p><p>获取选中单元格的数量</p><h4 id="returns-90" tabindex="-1">Returns <a class="header-anchor" href="#returns-90" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>number</code></p><p>选中的单元格数量</p><hr><h3 id="getselectedcells" tabindex="-1">getSelectedCells <a class="header-anchor" href="#getselectedcells" aria-label="Permalink to &quot;getSelectedCells&quot;">​</a></h3><p>▸ <strong>getSelectedCells</strong>(): { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]</p><p>获取所有选中的单元格</p><h4 id="returns-91" tabindex="-1">Returns <a class="header-anchor" href="#returns-91" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p>{ <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]</p><p>所有选中的单元格数组</p><hr><h3 id="getselectionrange" tabindex="-1">getSelectionRange <a class="header-anchor" href="#getselectionrange" aria-label="Permalink to &quot;getSelectionRange&quot;">​</a></h3><p>▸ <strong>getSelectionRange</strong>(): <code>null</code> | { <code>maxCol</code>: <code>number</code> ; <code>maxRow</code>: <code>number</code> ; <code>minCol</code>: <code>number</code> ; <code>minRow</code>: <code>number</code> }</p><p>获取选中单元格的范围</p><h4 id="returns-92" tabindex="-1">Returns <a class="header-anchor" href="#returns-92" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | { <code>maxCol</code>: <code>number</code> ; <code>maxRow</code>: <code>number</code> ; <code>minCol</code>: <code>number</code> ; <code>minRow</code>: <code>number</code> }</p><p>包含选中范围的最小和最大行列索引</p><hr><h3 id="gettypename" tabindex="-1">getTypeName <a class="header-anchor" href="#gettypename" aria-label="Permalink to &quot;getTypeName&quot;">​</a></h3><p>▸ <strong>getTypeName</strong>(): <code>string</code></p><p>获取自定义实体的类型名称。</p><h4 id="returns-93" tabindex="-1">Returns <a class="header-anchor" href="#returns-93" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>自定义实体的类型名称</p><h4 id="overrides-5" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-5" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#gettypename">getTypeName</a></p><hr><h3 id="getxdata" tabindex="-1">getxData <a class="header-anchor" href="#getxdata" aria-label="Permalink to &quot;getxData&quot;">​</a></h3><p>▸ <strong>getxData</strong>(<code>appName?</code>): <a href="./2d.MxCADResbuf.html"><code>MxCADResbuf</code></a></p><p>得到对象的扩展数据</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getXData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="parameters-45" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-45" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&quot;&quot;</code></td><td style="text-align:left;">扩展数据名</td></tr></tbody></table><h4 id="returns-94" tabindex="-1">Returns <a class="header-anchor" href="#returns-94" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./2d.MxCADResbuf.html"><code>MxCADResbuf</code></a></p><h4 id="inherited-from-49" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-49" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getxdata">getxData</a></p><hr><h3 id="getxdatadouble" tabindex="-1">getxDataDouble <a class="header-anchor" href="#getxdatadouble" aria-label="Permalink to &quot;getxDataDouble&quot;">​</a></h3><p>▸ <strong>getxDataDouble</strong>(<code>appName</code>): <code>Object</code></p><p>获取实体的指定 XData 类型中的 double 值</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getxDataDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DataName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data.ret){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data.val)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-46" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-46" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr></tbody></table><h4 id="returns-95" tabindex="-1">Returns <a class="header-anchor" href="#returns-95" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>double 值</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="inherited-from-50" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-50" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getxdatadouble">getxDataDouble</a></p><hr><h3 id="getxdatalong" tabindex="-1">getxDataLong <a class="header-anchor" href="#getxdatalong" aria-label="Permalink to &quot;getxDataLong&quot;">​</a></h3><p>▸ <strong>getxDataLong</strong>(<code>appName</code>): <code>Object</code></p><p>获取实体的指定 XData 类型中的 long（整数）值</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getxDataLong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DataName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data.ret){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data.val)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-47" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-47" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr></tbody></table><h4 id="returns-96" tabindex="-1">Returns <a class="header-anchor" href="#returns-96" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>long 值</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="inherited-from-51" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-51" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getxdatalong">getxDataLong</a></p><hr><h3 id="getxdatapoint" tabindex="-1">getxDataPoint <a class="header-anchor" href="#getxdatapoint" aria-label="Permalink to &quot;getxDataPoint&quot;">​</a></h3><p>▸ <strong>getxDataPoint</strong>(<code>appName</code>): <code>Object</code></p><p>获取实体的指定 XData 类型中的点对象</p><h4 id="parameters-48" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-48" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr></tbody></table><h4 id="returns-97" tabindex="-1">Returns <a class="header-anchor" href="#returns-97" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>获取结果及三维点对象</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td></tr></tbody></table><h4 id="inherited-from-52" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-52" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getxdatapoint">getxDataPoint</a></p><hr><h3 id="getxdatastring" tabindex="-1">getxDataString <a class="header-anchor" href="#getxdatastring" aria-label="Permalink to &quot;getxDataString&quot;">​</a></h3><p>▸ <strong>getxDataString</strong>(<code>appName</code>): <code>Object</code></p><p>获取与特定实体关联的 XData 信息，并以字符串形式返回</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getxDataString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DataName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data.ret){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data.val)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-49" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-49" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr></tbody></table><h4 id="returns-98" tabindex="-1">Returns <a class="header-anchor" href="#returns-98" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><p>val XData信息 | ret 是否返回成功</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ret</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="inherited-from-53" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-53" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#getxdatastring">getxDataString</a></p><hr><h3 id="hasunmergedcellsselected" tabindex="-1">hasUnmergedCellsSelected <a class="header-anchor" href="#hasunmergedcellsselected" aria-label="Permalink to &quot;hasUnmergedCellsSelected&quot;">​</a></h3><p>▸ <strong>hasUnmergedCellsSelected</strong>(): <code>boolean</code></p><p>检查是否选中了未合并的单元格</p><h4 id="returns-99" tabindex="-1">Returns <a class="header-anchor" href="#returns-99" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><hr><h3 id="highlight" tabindex="-1">highlight <a class="header-anchor" href="#highlight" aria-label="Permalink to &quot;highlight&quot;">​</a></h3><p>▸ <strong>highlight</strong>(<code>isHighlight</code>): <code>void</code></p><p>设置对象是否高亮</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highlight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="parameters-50" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-50" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>isHighlight</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">是否高亮</td></tr></tbody></table><h4 id="returns-100" tabindex="-1">Returns <a class="header-anchor" href="#returns-100" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-54" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-54" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#highlight">highlight</a></p><hr><h3 id="inittempobject" tabindex="-1">initTempObject <a class="header-anchor" href="#inittempobject" aria-label="Permalink to &quot;initTempObject&quot;">​</a></h3><p>▸ <strong>initTempObject</strong>(<code>imp</code>): <code>void</code></p><p>初始化临时对象。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McRxObject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McRxObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">initTempObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="parameters-51" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-51" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>imp</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">内部实现对象。</td></tr></tbody></table><h4 id="returns-101" tabindex="-1">Returns <a class="header-anchor" href="#returns-101" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-55" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-55" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#inittempobject">initTempObject</a></p><hr><h3 id="insertcolumn" tabindex="-1">insertColumn <a class="header-anchor" href="#insertcolumn" aria-label="Permalink to &quot;insertColumn&quot;">​</a></h3><p>▸ <strong>insertColumn</strong>(<code>position</code>, <code>onSelectionChange?</code>): <code>void</code></p><p>在指定位置插入列</p><h4 id="parameters-52" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-52" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>position</code></td><td style="text-align:left;"><code>&quot;left&quot;</code> | <code>&quot;right&quot;</code></td><td style="text-align:left;">插入位置，&#39;left&#39; 为左侧插入，&#39;right&#39; 为右侧插入</td></tr><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-102" tabindex="-1">Returns <a class="header-anchor" href="#returns-102" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="insertrow" tabindex="-1">insertRow <a class="header-anchor" href="#insertrow" aria-label="Permalink to &quot;insertRow&quot;">​</a></h3><p>▸ <strong>insertRow</strong>(<code>position</code>, <code>onSelectionChange?</code>): <code>void</code></p><p>在指定位置插入行</p><h4 id="parameters-53" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-53" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>position</code></td><td style="text-align:left;"><code>&quot;above&quot;</code> | <code>&quot;below&quot;</code></td><td style="text-align:left;">插入位置，&#39;above&#39; 为上方插入，&#39;below&#39; 为下方插入</td></tr><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-103" tabindex="-1">Returns <a class="header-anchor" href="#returns-103" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="iscellselected" tabindex="-1">isCellSelected <a class="header-anchor" href="#iscellselected" aria-label="Permalink to &quot;isCellSelected&quot;">​</a></h3><p>▸ <strong>isCellSelected</strong>(<code>row</code>, <code>col</code>): <code>boolean</code></p><p>检查指定单元格是否被选中</p><h4 id="parameters-54" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-54" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引</td></tr></tbody></table><h4 id="returns-104" tabindex="-1">Returns <a class="header-anchor" href="#returns-104" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否被选中</p><hr><h3 id="iserased" tabindex="-1">isErased <a class="header-anchor" href="#iserased" aria-label="Permalink to &quot;isErased&quot;">​</a></h3><p>▸ <strong>isErased</strong>(): <code>boolean</code></p><p>对象是否已经删除</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isErased</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span></span></code></pre></div><h4 id="returns-105" tabindex="-1">Returns <a class="header-anchor" href="#returns-105" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-56" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-56" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#iserased">isErased</a></p><hr><h3 id="ishaveextensiondictionary" tabindex="-1">isHaveExtensionDictionary <a class="header-anchor" href="#ishaveextensiondictionary" aria-label="Permalink to &quot;isHaveExtensionDictionary&quot;">​</a></h3><p>▸ <strong>isHaveExtensionDictionary</strong>(): <code>boolean</code></p><p>是否有扩展字典数据.</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isHaveExtensionDictionary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="returns-106" tabindex="-1">Returns <a class="header-anchor" href="#returns-106" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-57" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-57" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#ishaveextensiondictionary">isHaveExtensionDictionary</a></p><hr><h3 id="iskindof" tabindex="-1">isKindOf <a class="header-anchor" href="#iskindof" aria-label="Permalink to &quot;isKindOf&quot;">​</a></h3><p>▸ <strong>isKindOf</strong>(<code>sObjectName</code>): <code>boolean</code></p><p>判断对象类型</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McRxObject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McRxObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isKind </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isKindOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SomeObjectType&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(isKind); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: true 或 false</span></span></code></pre></div><h4 id="parameters-55" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-55" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>sObjectName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">类型名</td></tr></tbody></table><h4 id="returns-107" tabindex="-1">Returns <a class="header-anchor" href="#returns-107" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>返回对象是否是目标类型</p><h4 id="inherited-from-58" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-58" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#iskindof">isKindOf</a></p><hr><h3 id="ismergedcellselected" tabindex="-1">isMergedCellSelected <a class="header-anchor" href="#ismergedcellselected" aria-label="Permalink to &quot;isMergedCellSelected&quot;">​</a></h3><p>▸ <strong>isMergedCellSelected</strong>(): <code>boolean</code></p><p>检查是否选中了合并的单元格</p><h4 id="returns-108" tabindex="-1">Returns <a class="header-anchor" href="#returns-108" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><hr><h3 id="isnull" tabindex="-1">isNull <a class="header-anchor" href="#isnull" aria-label="Permalink to &quot;isNull&quot;">​</a></h3><p>▸ <strong>isNull</strong>(): <code>any</code></p><p>判断是否为空对象</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McRxObject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McRxObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: true 或 false</span></span></code></pre></div><h4 id="returns-109" tabindex="-1">Returns <a class="header-anchor" href="#returns-109" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>any</code></p><h4 id="inherited-from-59" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-59" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#isnull">isNull</a></p><hr><h3 id="mergecells" tabindex="-1">mergeCells <a class="header-anchor" href="#mergecells" aria-label="Permalink to &quot;mergeCells&quot;">​</a></h3><p>▸ <strong>mergeCells</strong>(<code>onSelectionChange?</code>): <code>void</code></p><p>合并选中的单元格</p><h4 id="parameters-56" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-56" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-110" tabindex="-1">Returns <a class="header-anchor" href="#returns-110" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="mirror" tabindex="-1">mirror <a class="header-anchor" href="#mirror" aria-label="Permalink to &quot;mirror&quot;">​</a></h3><p>▸ <strong>mirror</strong>(<code>point1</code>, <code>point2</code>): <code>boolean</code></p><p>镜向对象</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity, McGePoint3d } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mirror</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h4 id="parameters-57" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-57" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>point1</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td><td style="text-align:left;">镜像基点</td></tr><tr><td style="text-align:left;"><code>point2</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td><td style="text-align:left;">-</td></tr></tbody></table><h4 id="returns-111" tabindex="-1">Returns <a class="header-anchor" href="#returns-111" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-60" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-60" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#mirror">mirror</a></p><hr><h3 id="move" tabindex="-1">move <a class="header-anchor" href="#move" aria-label="Permalink to &quot;move&quot;">​</a></h3><p>▸ <strong>move</strong>(<code>fromPoint</code>, <code>toPoint</code>): <code>boolean</code></p><p>移动对象</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity, McGePoint3d } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h4 id="parameters-58" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-58" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>fromPoint</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td><td style="text-align:left;">移动开始点</td></tr><tr><td style="text-align:left;"><code>toPoint</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td><td style="text-align:left;">移动结束点</td></tr></tbody></table><h4 id="returns-112" tabindex="-1">Returns <a class="header-anchor" href="#returns-112" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-61" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-61" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#move">move</a></p><hr><h3 id="movegrippointsat" tabindex="-1">moveGripPointsAt <a class="header-anchor" href="#movegrippointsat" aria-label="Permalink to &quot;moveGripPointsAt&quot;">​</a></h3><p>▸ <strong>moveGripPointsAt</strong>(<code>iIndex</code>, <code>dXOffset</code>, <code>dYOffset</code>, <code>dZOffset</code>): <code>void</code></p><p>移动自定义对象的夹点。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbCustomEntity, MxCADWorldDraw, McDbLine } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 新创建 McDbTestLineCustomEntity 类继承 McDbCustomEntity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbTestLineCustomEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 定义McDbTestLineCustomEntity内部的点对象 pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 移动自定义对象的夹点。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> moveGripPointsAt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">iIndex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dXOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dYOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">dZOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assertWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (iIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dXOffset;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dYOffset;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1.z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dZOffset;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (iIndex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2.x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dXOffset;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2.y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dYOffset;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">           this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2.z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dZOffset;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span></code></pre></div><h4 id="parameters-59" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-59" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>iIndex</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">夹点索引</td></tr><tr><td style="text-align:left;"><code>dXOffset</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">X轴偏移量</td></tr><tr><td style="text-align:left;"><code>dYOffset</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Y轴偏移量</td></tr><tr><td style="text-align:left;"><code>dZOffset</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Z轴偏移量</td></tr></tbody></table><h4 id="returns-113" tabindex="-1">Returns <a class="header-anchor" href="#returns-113" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="overrides-6" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-6" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#movegrippointsat">moveGripPointsAt</a></p><hr><h3 id="resetcolumnwidth" tabindex="-1">resetColumnWidth <a class="header-anchor" href="#resetcolumnwidth" aria-label="Permalink to &quot;resetColumnWidth&quot;">​</a></h3><p>▸ <strong>resetColumnWidth</strong>(<code>col</code>): <code>void</code></p><p>重置指定列的宽度为默认值</p><h4 id="parameters-60" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-60" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-114" tabindex="-1">Returns <a class="header-anchor" href="#returns-114" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="resetrowheight" tabindex="-1">resetRowHeight <a class="header-anchor" href="#resetrowheight" aria-label="Permalink to &quot;resetRowHeight&quot;">​</a></h3><p>▸ <strong>resetRowHeight</strong>(<code>row</code>): <code>void</code></p><p>重置指定行的高度为默认值</p><h4 id="parameters-61" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-61" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr></tbody></table><h4 id="returns-115" tabindex="-1">Returns <a class="header-anchor" href="#returns-115" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="rotate" tabindex="-1">rotate <a class="header-anchor" href="#rotate" aria-label="Permalink to &quot;rotate&quot;">​</a></h3><p>▸ <strong>rotate</strong>(<code>basePoint</code>, <code>dRotationAngle</code>): <code>boolean</code></p><p>旋转对象</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity, McGePoint3d } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-62" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-62" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>basePoint</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td><td style="text-align:left;">旋转基点</td></tr><tr><td style="text-align:left;"><code>dRotationAngle</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">旋转角度</td></tr></tbody></table><h4 id="returns-116" tabindex="-1">Returns <a class="header-anchor" href="#returns-116" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-62" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-62" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#rotate">rotate</a></p><hr><h3 id="rxinit" tabindex="-1">rxInit <a class="header-anchor" href="#rxinit" aria-label="Permalink to &quot;rxInit&quot;">​</a></h3><p>▸ <strong>rxInit</strong>(): <code>void</code></p><p>自定义实体注册</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxFun } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxdra</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">w</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// MxCAD创建成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MxFun.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mxcadApplicationCreatedMxCADObject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// McDbTestLineCustomEntity 自定义实体</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbTestLineCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rxInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自定义实体注册</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  MxFun.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MxTest_DrawCustomEntity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册绘制实体命令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h4 id="returns-117" tabindex="-1">Returns <a class="header-anchor" href="#returns-117" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-63" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-63" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#rxinit">rxInit</a></p><hr><h3 id="scaleentity" tabindex="-1">scaleEntity <a class="header-anchor" href="#scaleentity" aria-label="Permalink to &quot;scaleEntity&quot;">​</a></h3><p>▸ <strong>scaleEntity</strong>(<code>basePoint</code>, <code>dScaleFactor</code>): <code>boolean</code></p><p>缩放对象</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbEntity, McGePoint3d } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scaleEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="parameters-63" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-63" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>basePoint</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td><td style="text-align:left;">缩放基点</td></tr><tr><td style="text-align:left;"><code>dScaleFactor</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">缩放因子（&lt;1 缩小； &gt;1 放大）</td></tr></tbody></table><h4 id="returns-118" tabindex="-1">Returns <a class="header-anchor" href="#returns-118" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-64" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-64" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#scaleentity">scaleEntity</a></p><hr><h3 id="setalignment" tabindex="-1">setAlignment <a class="header-anchor" href="#setalignment" aria-label="Permalink to &quot;setAlignment&quot;">​</a></h3><p>▸ <strong>setAlignment</strong>(<code>alignment</code>, <code>onSelectionChange?</code>): <code>void</code></p><p>设置选中单元格的水平对齐方式</p><h4 id="parameters-64" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-64" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>alignment</code></td><td style="text-align:left;"><code>&quot;center&quot;</code> | <code>&quot;left&quot;</code> | <code>&quot;right&quot;</code></td><td style="text-align:left;">对齐方式</td></tr><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-119" tabindex="-1">Returns <a class="header-anchor" href="#returns-119" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setbatchcellalignment" tabindex="-1">setBatchCellAlignment <a class="header-anchor" href="#setbatchcellalignment" aria-label="Permalink to &quot;setBatchCellAlignment&quot;">​</a></h3><p>▸ <strong>setBatchCellAlignment</strong>(<code>cells</code>, <code>alignment</code>): <code>void</code></p><p>批量设置单元格水平对齐方式</p><h4 id="parameters-65" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-65" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">(<code>string</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> })[]</td><td style="text-align:left;">单元格位置数组 { row, col } 或 A1引用字符串数组</td></tr><tr><td style="text-align:left;"><code>alignment</code></td><td style="text-align:left;"><code>&quot;center&quot;</code> | <code>&quot;left&quot;</code> | <code>&quot;right&quot;</code></td><td style="text-align:left;">水平对齐方式</td></tr></tbody></table><h4 id="returns-120" tabindex="-1">Returns <a class="header-anchor" href="#returns-120" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setbatchcellbackgroundcolor" tabindex="-1">setBatchCellBackgroundColor <a class="header-anchor" href="#setbatchcellbackgroundcolor" aria-label="Permalink to &quot;setBatchCellBackgroundColor&quot;">​</a></h3><p>▸ <strong>setBatchCellBackgroundColor</strong>(<code>cells</code>, <code>color</code>): <code>void</code></p><p>批量设置单元格背景颜色</p><h4 id="parameters-66" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-66" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">(<code>string</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> })[]</td><td style="text-align:left;">单元格位置数组 { row, col } 或 A1引用字符串数组</td></tr><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>undefined</code> | <code>null</code> | <code>number</code></td><td style="text-align:left;">背景颜色值，null表示删除背景色</td></tr></tbody></table><h4 id="returns-121" tabindex="-1">Returns <a class="header-anchor" href="#returns-121" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setbatchcellborderlinetype" tabindex="-1">setBatchCellBorderLineType <a class="header-anchor" href="#setbatchcellborderlinetype" aria-label="Permalink to &quot;setBatchCellBorderLineType&quot;">​</a></h3><p>▸ <strong>setBatchCellBorderLineType</strong>(<code>cells</code>, <code>lineType</code>): <code>void</code></p><p>批量设置单元格边框线型</p><h4 id="parameters-67" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-67" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">(<code>string</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> })[]</td><td style="text-align:left;">单元格位置数组 { row, col } 或 A1引用字符串数组</td></tr><tr><td style="text-align:left;"><code>lineType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">边框线型(如 &quot;Continuous&quot;, &quot;Dashed&quot;, &quot;Dotted&quot;等)</td></tr></tbody></table><h4 id="returns-122" tabindex="-1">Returns <a class="header-anchor" href="#returns-122" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setbatchcellborderlineweight" tabindex="-1">setBatchCellBorderLineWeight <a class="header-anchor" href="#setbatchcellborderlineweight" aria-label="Permalink to &quot;setBatchCellBorderLineWeight&quot;">​</a></h3><p>▸ <strong>setBatchCellBorderLineWeight</strong>(<code>cells</code>, <code>lineWeight</code>): <code>void</code></p><p>批量设置单元格边框线宽</p><h4 id="parameters-68" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-68" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">(<code>string</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> })[]</td><td style="text-align:left;">单元格位置数组 { row, col } 或 A1引用字符串数组</td></tr><tr><td style="text-align:left;"><code>lineWeight</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">边框线宽(毫米)</td></tr></tbody></table><h4 id="returns-123" tabindex="-1">Returns <a class="header-anchor" href="#returns-123" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setbatchcelltextangle" tabindex="-1">setBatchCellTextAngle <a class="header-anchor" href="#setbatchcelltextangle" aria-label="Permalink to &quot;setBatchCellTextAngle&quot;">​</a></h3><p>▸ <strong>setBatchCellTextAngle</strong>(<code>cells</code>, <code>textAngle</code>): <code>void</code></p><p>批量设置单元格文本角度</p><h4 id="parameters-69" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-69" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">(<code>string</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> })[]</td><td style="text-align:left;">单元格位置数组 { row, col } 或 A1引用字符串数组</td></tr><tr><td style="text-align:left;"><code>textAngle</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">文本角度(0-360度)</td></tr></tbody></table><h4 id="returns-124" tabindex="-1">Returns <a class="header-anchor" href="#returns-124" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setbatchcelltextcolor" tabindex="-1">setBatchCellTextColor <a class="header-anchor" href="#setbatchcelltextcolor" aria-label="Permalink to &quot;setBatchCellTextColor&quot;">​</a></h3><p>▸ <strong>setBatchCellTextColor</strong>(<code>cells</code>, <code>color</code>): <code>void</code></p><p>批量设置单元格文本颜色</p><h4 id="parameters-70" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-70" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">(<code>string</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> })[]</td><td style="text-align:left;">单元格位置数组 { row, col } 或 A1引用字符串数组</td></tr><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>undefined</code> | <code>null</code> | <code>number</code></td><td style="text-align:left;">文本颜色值，null表示删除文本颜色</td></tr></tbody></table><h4 id="returns-125" tabindex="-1">Returns <a class="header-anchor" href="#returns-125" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setbatchcelltextstyle" tabindex="-1">setBatchCellTextStyle <a class="header-anchor" href="#setbatchcelltextstyle" aria-label="Permalink to &quot;setBatchCellTextStyle&quot;">​</a></h3><p>▸ <strong>setBatchCellTextStyle</strong>(<code>cells</code>, <code>textStyle</code>): <code>void</code></p><p>批量设置单元格文本样式</p><h4 id="parameters-71" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-71" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">(<code>string</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> })[]</td><td style="text-align:left;">单元格位置数组 { row, col } 或 A1引用字符串数组</td></tr><tr><td style="text-align:left;"><code>textStyle</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">文本样式名称</td></tr></tbody></table><h4 id="returns-126" tabindex="-1">Returns <a class="header-anchor" href="#returns-126" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setbatchcellverticalalignment" tabindex="-1">setBatchCellVerticalAlignment <a class="header-anchor" href="#setbatchcellverticalalignment" aria-label="Permalink to &quot;setBatchCellVerticalAlignment&quot;">​</a></h3><p>▸ <strong>setBatchCellVerticalAlignment</strong>(<code>cells</code>, <code>verticalAlignment</code>): <code>void</code></p><p>批量设置单元格垂直对齐方式</p><h4 id="parameters-72" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-72" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">(<code>string</code> | { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> })[]</td><td style="text-align:left;">单元格位置数组 { row, col } 或 A1引用字符串数组</td></tr><tr><td style="text-align:left;"><code>verticalAlignment</code></td><td style="text-align:left;"><code>&quot;top&quot;</code> | <code>&quot;bottom&quot;</code> | <code>&quot;middle&quot;</code></td><td style="text-align:left;">垂直对齐方式</td></tr></tbody></table><h4 id="returns-127" tabindex="-1">Returns <a class="header-anchor" href="#returns-127" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcellalignment" tabindex="-1">setCellAlignment <a class="header-anchor" href="#setcellalignment" aria-label="Permalink to &quot;setCellAlignment&quot;">​</a></h3><p>▸ <strong>setCellAlignment</strong>(<code>row</code>, <code>col</code>, <code>alignment</code>): <code>void</code></p><p>设置单元格水平对齐方式</p><h4 id="parameters-73" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-73" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>alignment</code></td><td style="text-align:left;"><code>&quot;center&quot;</code> | <code>&quot;left&quot;</code> | <code>&quot;right&quot;</code></td><td style="text-align:left;">水平对齐方式</td></tr></tbody></table><h4 id="returns-128" tabindex="-1">Returns <a class="header-anchor" href="#returns-128" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcellalignmentbyref" tabindex="-1">setCellAlignmentByRef <a class="header-anchor" href="#setcellalignmentbyref" aria-label="Permalink to &quot;setCellAlignmentByRef&quot;">​</a></h3><p>▸ <strong>setCellAlignmentByRef</strong>(<code>cellRef</code>, <code>alignment</code>): <code>boolean</code></p><p>通过A1引用格式设置单元格水平对齐方式</p><h4 id="parameters-74" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-74" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr><tr><td style="text-align:left;"><code>alignment</code></td><td style="text-align:left;"><code>&quot;center&quot;</code> | <code>&quot;left&quot;</code> | <code>&quot;right&quot;</code></td><td style="text-align:left;">水平对齐方式</td></tr></tbody></table><h4 id="returns-129" tabindex="-1">Returns <a class="header-anchor" href="#returns-129" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><hr><h3 id="setcellbackgroundcolor" tabindex="-1">setCellBackgroundColor <a class="header-anchor" href="#setcellbackgroundcolor" aria-label="Permalink to &quot;setCellBackgroundColor&quot;">​</a></h3><p>▸ <strong>setCellBackgroundColor</strong>(<code>row</code>, <code>col</code>, <code>color</code>): <code>void</code></p><p>设置单元格背景颜色</p><h4 id="parameters-75" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-75" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>undefined</code> | <code>null</code> | <code>number</code></td><td style="text-align:left;">背景颜色值 - 支持真彩色：0xRRGGBB，如 0x000000 黑色（RR是红色值，GG是绿色值，BB是蓝色值） - 支持颜色索引：0-255 - 支持ColorMethod.kByLayer(1)表示随层 - 支持ColorMethod.kByBlock(2)表示随块 - 传入null可移除背景颜色</td></tr></tbody></table><h4 id="returns-130" tabindex="-1">Returns <a class="header-anchor" href="#returns-130" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcellbackgroundcolorbyref" tabindex="-1">setCellBackgroundColorByRef <a class="header-anchor" href="#setcellbackgroundcolorbyref" aria-label="Permalink to &quot;setCellBackgroundColorByRef&quot;">​</a></h3><p>▸ <strong>setCellBackgroundColorByRef</strong>(<code>cellRef</code>, <code>color</code>): <code>boolean</code></p><p>通过A1引用格式设置单元格背景颜色</p><h4 id="parameters-76" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-76" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>undefined</code> | <code>null</code> | <code>number</code></td><td style="text-align:left;">背景颜色值，null表示删除背景色</td></tr></tbody></table><h4 id="returns-131" tabindex="-1">Returns <a class="header-anchor" href="#returns-131" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><hr><h3 id="setcellborderlinetype" tabindex="-1">setCellBorderLineType <a class="header-anchor" href="#setcellborderlinetype" aria-label="Permalink to &quot;setCellBorderLineType&quot;">​</a></h3><p>▸ <strong>setCellBorderLineType</strong>(<code>row</code>, <code>col</code>, <code>lineType</code>): <code>void</code></p><p>设置单元格边框线型</p><h4 id="parameters-77" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-77" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>lineType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">边框线型(如 &quot;Continuous&quot;, &quot;Dashed&quot;, &quot;Dotted&quot;等)</td></tr></tbody></table><h4 id="returns-132" tabindex="-1">Returns <a class="header-anchor" href="#returns-132" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcellborderlinetypebyref" tabindex="-1">setCellBorderLineTypeByRef <a class="header-anchor" href="#setcellborderlinetypebyref" aria-label="Permalink to &quot;setCellBorderLineTypeByRef&quot;">​</a></h3><p>▸ <strong>setCellBorderLineTypeByRef</strong>(<code>cellRef</code>, <code>lineType</code>): <code>boolean</code></p><p>通过A1引用格式设置单元格边框线型</p><h4 id="parameters-78" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-78" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr><tr><td style="text-align:left;"><code>lineType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">边框线型(如 &quot;Continuous&quot;, &quot;Dashed&quot;, &quot;Dotted&quot;等)</td></tr></tbody></table><h4 id="returns-133" tabindex="-1">Returns <a class="header-anchor" href="#returns-133" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><hr><h3 id="setcellborderlineweight" tabindex="-1">setCellBorderLineWeight <a class="header-anchor" href="#setcellborderlineweight" aria-label="Permalink to &quot;setCellBorderLineWeight&quot;">​</a></h3><p>▸ <strong>setCellBorderLineWeight</strong>(<code>row</code>, <code>col</code>, <code>lineWeight</code>): <code>void</code></p><p>设置单元格边框线宽</p><h4 id="parameters-79" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-79" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>lineWeight</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">边框线宽(毫米)</td></tr></tbody></table><h4 id="returns-134" tabindex="-1">Returns <a class="header-anchor" href="#returns-134" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcellborderlineweightbyref" tabindex="-1">setCellBorderLineWeightByRef <a class="header-anchor" href="#setcellborderlineweightbyref" aria-label="Permalink to &quot;setCellBorderLineWeightByRef&quot;">​</a></h3><p>▸ <strong>setCellBorderLineWeightByRef</strong>(<code>cellRef</code>, <code>lineWeight</code>): <code>boolean</code></p><p>通过A1引用格式设置单元格边框线宽</p><h4 id="parameters-80" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-80" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr><tr><td style="text-align:left;"><code>lineWeight</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">边框线宽(毫米)</td></tr></tbody></table><h4 id="returns-135" tabindex="-1">Returns <a class="header-anchor" href="#returns-135" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><hr><h3 id="setcelltextangle" tabindex="-1">setCellTextAngle <a class="header-anchor" href="#setcelltextangle" aria-label="Permalink to &quot;setCellTextAngle&quot;">​</a></h3><p>▸ <strong>setCellTextAngle</strong>(<code>row</code>, <code>col</code>, <code>textAngle</code>): <code>void</code></p><p>设置单元格文本角度</p><h4 id="parameters-81" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-81" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>textAngle</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">文本角度(0-360度)</td></tr></tbody></table><h4 id="returns-136" tabindex="-1">Returns <a class="header-anchor" href="#returns-136" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcelltextanglebyref" tabindex="-1">setCellTextAngleByRef <a class="header-anchor" href="#setcelltextanglebyref" aria-label="Permalink to &quot;setCellTextAngleByRef&quot;">​</a></h3><p>▸ <strong>setCellTextAngleByRef</strong>(<code>cellRef</code>, <code>textAngle</code>): <code>boolean</code></p><p>通过A1引用格式设置单元格文本角度</p><h4 id="parameters-82" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-82" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr><tr><td style="text-align:left;"><code>textAngle</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">文本角度(0-360度)</td></tr></tbody></table><h4 id="returns-137" tabindex="-1">Returns <a class="header-anchor" href="#returns-137" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><hr><h3 id="setcelltextcolor" tabindex="-1">setCellTextColor <a class="header-anchor" href="#setcelltextcolor" aria-label="Permalink to &quot;setCellTextColor&quot;">​</a></h3><p>▸ <strong>setCellTextColor</strong>(<code>row</code>, <code>col</code>, <code>color</code>): <code>void</code></p><p>设置单元格文本颜色</p><h4 id="parameters-83" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-83" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>undefined</code> | <code>null</code> | <code>number</code></td><td style="text-align:left;">文本颜色值 - 支持真彩色：0xRRGGBB，如 0x000000 黑色（RR是红色值，GG是绿色值，BB是蓝色值） - 支持颜色索引：0-255 - 支持ColorMethod.kByLayer(1)表示随层 - 支持ColorMethod.kByBlock(2)表示随块 - 传入null可移除文本颜色</td></tr></tbody></table><h4 id="returns-138" tabindex="-1">Returns <a class="header-anchor" href="#returns-138" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcelltextcolorbyref" tabindex="-1">setCellTextColorByRef <a class="header-anchor" href="#setcelltextcolorbyref" aria-label="Permalink to &quot;setCellTextColorByRef&quot;">​</a></h3><p>▸ <strong>setCellTextColorByRef</strong>(<code>cellRef</code>, <code>color</code>): <code>boolean</code></p><p>通过A1引用格式设置单元格文本颜色</p><h4 id="parameters-84" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-84" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>undefined</code> | <code>null</code> | <code>number</code></td><td style="text-align:left;">文本颜色值，null表示删除文本颜色</td></tr></tbody></table><h4 id="returns-139" tabindex="-1">Returns <a class="header-anchor" href="#returns-139" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><hr><h3 id="setcelltextstyle" tabindex="-1">setCellTextStyle <a class="header-anchor" href="#setcelltextstyle" aria-label="Permalink to &quot;setCellTextStyle&quot;">​</a></h3><p>▸ <strong>setCellTextStyle</strong>(<code>row</code>, <code>col</code>, <code>textStyle</code>): <code>void</code></p><p>设置单元格文本样式</p><h4 id="parameters-85" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-85" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>textStyle</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">文本样式名称</td></tr></tbody></table><h4 id="returns-140" tabindex="-1">Returns <a class="header-anchor" href="#returns-140" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcelltextstylebyref" tabindex="-1">setCellTextStyleByRef <a class="header-anchor" href="#setcelltextstylebyref" aria-label="Permalink to &quot;setCellTextStyleByRef&quot;">​</a></h3><p>▸ <strong>setCellTextStyleByRef</strong>(<code>cellRef</code>, <code>textStyle</code>): <code>boolean</code></p><p>通过A1引用格式设置单元格文本样式</p><h4 id="parameters-86" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-86" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr><tr><td style="text-align:left;"><code>textStyle</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">文本样式名称</td></tr></tbody></table><h4 id="returns-141" tabindex="-1">Returns <a class="header-anchor" href="#returns-141" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><hr><h3 id="setcellvalue" tabindex="-1">setCellValue <a class="header-anchor" href="#setcellvalue" aria-label="Permalink to &quot;setCellValue&quot;">​</a></h3><p>▸ <strong>setCellValue</strong>(<code>row</code>, <code>col</code>, <code>value</code>): <code>void</code></p><p>设置指定单元格的值</p><h4 id="parameters-87" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-87" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">单元格值（Slate格式或普通文本）</td></tr></tbody></table><h4 id="returns-142" tabindex="-1">Returns <a class="header-anchor" href="#returns-142" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcellverticalalignment" tabindex="-1">setCellVerticalAlignment <a class="header-anchor" href="#setcellverticalalignment" aria-label="Permalink to &quot;setCellVerticalAlignment&quot;">​</a></h3><p>▸ <strong>setCellVerticalAlignment</strong>(<code>row</code>, <code>col</code>, <code>verticalAlignment</code>): <code>void</code></p><p>设置单元格垂直对齐方式</p><h4 id="parameters-88" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-88" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>verticalAlignment</code></td><td style="text-align:left;"><code>&quot;top&quot;</code> | <code>&quot;bottom&quot;</code> | <code>&quot;middle&quot;</code></td><td style="text-align:left;">垂直对齐方式</td></tr></tbody></table><h4 id="returns-143" tabindex="-1">Returns <a class="header-anchor" href="#returns-143" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setcellverticalalignmentbyref" tabindex="-1">setCellVerticalAlignmentByRef <a class="header-anchor" href="#setcellverticalalignmentbyref" aria-label="Permalink to &quot;setCellVerticalAlignmentByRef&quot;">​</a></h3><p>▸ <strong>setCellVerticalAlignmentByRef</strong>(<code>cellRef</code>, <code>verticalAlignment</code>): <code>boolean</code></p><p>通过A1引用格式设置单元格垂直对齐方式</p><h4 id="parameters-89" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-89" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cellRef</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A1格式的单元格引用 (例如 &quot;A1&quot;, &quot;B2&quot;)</td></tr><tr><td style="text-align:left;"><code>verticalAlignment</code></td><td style="text-align:left;"><code>&quot;top&quot;</code> | <code>&quot;bottom&quot;</code> | <code>&quot;middle&quot;</code></td><td style="text-align:left;">垂直对齐方式</td></tr></tbody></table><h4 id="returns-144" tabindex="-1">Returns <a class="header-anchor" href="#returns-144" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><hr><h3 id="setcolumnwidth" tabindex="-1">setColumnWidth <a class="header-anchor" href="#setcolumnwidth" aria-label="Permalink to &quot;setColumnWidth&quot;">​</a></h3><p>▸ <strong>setColumnWidth</strong>(<code>col</code>, <code>width</code>): <code>void</code></p><p>设置指定列的宽度</p><h4 id="parameters-90" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-90" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>width</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列宽度（单位与style.colWidth一致）</td></tr></tbody></table><h4 id="returns-145" tabindex="-1">Returns <a class="header-anchor" href="#returns-145" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setfromarray" tabindex="-1">setFromArray <a class="header-anchor" href="#setfromarray" aria-label="Permalink to &quot;setFromArray&quot;">​</a></h3><p>▸ <strong>setFromArray</strong>(<code>data</code>): <code>void</code></p><h4 id="parameters-91" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-91" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>any</code>[][]</td></tr></tbody></table><h4 id="returns-146" tabindex="-1">Returns <a class="header-anchor" href="#returns-146" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setfromjson" tabindex="-1">setFromJson <a class="header-anchor" href="#setfromjson" aria-label="Permalink to &quot;setFromJson&quot;">​</a></h3><p>▸ <strong>setFromJson</strong>(<code>jsonArray</code>): <code>void</code></p><h4 id="parameters-92" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-92" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>jsonArray</code></td><td style="text-align:left;"><code>any</code>[]</td></tr></tbody></table><h4 id="returns-147" tabindex="-1">Returns <a class="header-anchor" href="#returns-147" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setfromworkbook" tabindex="-1">setFromWorkbook <a class="header-anchor" href="#setfromworkbook" aria-label="Permalink to &quot;setFromWorkbook&quot;">​</a></h3><p>▸ <strong>setFromWorkbook</strong>(<code>processedData</code>): <code>void</code></p><h4 id="parameters-93" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-93" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>processedData</code></td><td style="text-align:left;"><code>ICellStyleInfo</code></td></tr></tbody></table><h4 id="returns-148" tabindex="-1">Returns <a class="header-anchor" href="#returns-148" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setjson" tabindex="-1">setJson <a class="header-anchor" href="#setjson" aria-label="Permalink to &quot;setJson&quot;">​</a></h3><p>▸ <strong>setJson</strong>(<code>str</code>): <code>boolean</code></p><p>设置 JSON 格式的字符串。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McRxObject } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McRxObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setJson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{&quot;key&quot;: &quot;value&quot;}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span></code></pre></div><h4 id="parameters-94" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-94" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">JSON 格式的字符串。</td></tr></tbody></table><h4 id="returns-149" tabindex="-1">Returns <a class="header-anchor" href="#returns-149" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功。</p><h4 id="inherited-from-65" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-65" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#setjson">setJson</a></p><hr><h3 id="setmergecells" tabindex="-1">setMergeCells <a class="header-anchor" href="#setmergecells" aria-label="Permalink to &quot;setMergeCells&quot;">​</a></h3><p>▸ <strong>setMergeCells</strong>(<code>mergeCells</code>): <code>void</code></p><p>设置合并单元格信息</p><h4 id="parameters-95" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-95" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>mergeCells</code></td><td style="text-align:left;"><code>IMergeCellInfo</code>[]</td></tr></tbody></table><h4 id="returns-150" tabindex="-1">Returns <a class="header-anchor" href="#returns-150" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setrowheight" tabindex="-1">setRowHeight <a class="header-anchor" href="#setrowheight" aria-label="Permalink to &quot;setRowHeight&quot;">​</a></h3><p>▸ <strong>setRowHeight</strong>(<code>row</code>, <code>height</code>): <code>void</code></p><p>设置指定行的高度</p><h4 id="parameters-96" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-96" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>height</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行高度（单位与style.rowHeight一致）</td></tr></tbody></table><h4 id="returns-151" tabindex="-1">Returns <a class="header-anchor" href="#returns-151" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setselectcellbackgroundcolor" tabindex="-1">setSelectCellBackgroundColor <a class="header-anchor" href="#setselectcellbackgroundcolor" aria-label="Permalink to &quot;setSelectCellBackgroundColor&quot;">​</a></h3><p>▸ <strong>setSelectCellBackgroundColor</strong>(<code>color</code>, <code>onSelectionChange?</code>): <code>void</code></p><p>设置选中单元格的背景颜色</p><h4 id="parameters-97" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-97" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>undefined</code> | <code>null</code> | <code>number</code></td><td style="text-align:left;">颜色值</td></tr><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-152" tabindex="-1">Returns <a class="header-anchor" href="#returns-152" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setselectcelltextcolor" tabindex="-1">setSelectCellTextColor <a class="header-anchor" href="#setselectcelltextcolor" aria-label="Permalink to &quot;setSelectCellTextColor&quot;">​</a></h3><p>▸ <strong>setSelectCellTextColor</strong>(<code>color</code>, <code>onSelectionChange?</code>): <code>void</code></p><p>设置选中单元格的文本颜色</p><h4 id="parameters-98" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-98" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>undefined</code> | <code>null</code> | <code>number</code></td><td style="text-align:left;">颜色值</td></tr><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-153" tabindex="-1">Returns <a class="header-anchor" href="#returns-153" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setselectedcell" tabindex="-1">setSelectedCell <a class="header-anchor" href="#setselectedcell" aria-label="Permalink to &quot;setSelectedCell&quot;">​</a></h3><p>▸ <strong>setSelectedCell</strong>(<code>row</code>, <code>col</code>): <code>void</code></p><p>设置当前选中的单元格</p><h4 id="parameters-99" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-99" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>row</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">行索引 (0-based)</td></tr><tr><td style="text-align:left;"><code>col</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">列索引 (0-based)</td></tr></tbody></table><h4 id="returns-154" tabindex="-1">Returns <a class="header-anchor" href="#returns-154" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setselectedcells" tabindex="-1">setSelectedCells <a class="header-anchor" href="#setselectedcells" aria-label="Permalink to &quot;setSelectedCells&quot;">​</a></h3><p>▸ <strong>setSelectedCells</strong>(<code>cells</code>): <code>void</code></p><p>设置多个选中的单元格</p><h4 id="parameters-100" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-100" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cells</code></td><td style="text-align:left;">{ <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]</td><td style="text-align:left;">单元格位置数组 [{row, col}, ...]</td></tr></tbody></table><h4 id="returns-155" tabindex="-1">Returns <a class="header-anchor" href="#returns-155" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setverticalalignment" tabindex="-1">setVerticalAlignment <a class="header-anchor" href="#setverticalalignment" aria-label="Permalink to &quot;setVerticalAlignment&quot;">​</a></h3><p>▸ <strong>setVerticalAlignment</strong>(<code>alignment</code>, <code>onSelectionChange?</code>): <code>void</code></p><p>设置选中单元格的垂直对齐方式</p><h4 id="parameters-101" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-101" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>alignment</code></td><td style="text-align:left;"><code>&quot;top&quot;</code> | <code>&quot;bottom&quot;</code> | <code>&quot;middle&quot;</code></td><td style="text-align:left;">垂直对齐方式</td></tr><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-156" tabindex="-1">Returns <a class="header-anchor" href="#returns-156" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setxdata" tabindex="-1">setxData <a class="header-anchor" href="#setxdata" aria-label="Permalink to &quot;setxData&quot;">​</a></h3><p>▸ <strong>setxData</strong>(<code>xdata</code>): <code>boolean</code></p><p>设置对象的扩展数据</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCADUiPrEntity, McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置扩展数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADUiPrEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;选择对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">McDbEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setxData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADResbuf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([{type:DxfCode.kExDataName,val:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DataName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},{type:DxfCode.kString,val:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yyyyy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}]));</span></span></code></pre></div><h4 id="parameters-102" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-102" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>xdata</code></td><td style="text-align:left;"><a href="./2d.MxCADResbuf.html"><code>MxCADResbuf</code></a></td><td style="text-align:left;">扩展数据链表</td></tr></tbody></table><h4 id="returns-157" tabindex="-1">Returns <a class="header-anchor" href="#returns-157" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-66" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-66" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#setxdata">setxData</a></p><hr><h3 id="setxdatadouble" tabindex="-1">setxDataDouble <a class="header-anchor" href="#setxdatadouble" aria-label="Permalink to &quot;setxDataDouble&quot;">​</a></h3><p>▸ <strong>setxDataDouble</strong>(<code>appName</code>, <code>val</code>): <code>boolean</code></p><p>设置实体的指定 XData 类型中的 double 值</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCADUiPrEntity, McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADUiPrEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;选择对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">McDbEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setxDataDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DataName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //设置成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //设置失败</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-103" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-103" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">double 值</td></tr></tbody></table><h4 id="returns-158" tabindex="-1">Returns <a class="header-anchor" href="#returns-158" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>布尔值</p><h4 id="inherited-from-67" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-67" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#setxdatadouble">setxDataDouble</a></p><hr><h3 id="setxdatalong" tabindex="-1">setxDataLong <a class="header-anchor" href="#setxdatalong" aria-label="Permalink to &quot;setxDataLong&quot;">​</a></h3><p>▸ <strong>setxDataLong</strong>(<code>appName</code>, <code>val</code>): <code>boolean</code></p><p>设置实体的指定 XData 类型中的 long（整数）值</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCADUiPrEntity, McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADUiPrEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;选择对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">McDbEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setxDataLong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DataName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //设置成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //设置失败</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-104" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-104" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">long 值</td></tr></tbody></table><h4 id="returns-159" tabindex="-1">Returns <a class="header-anchor" href="#returns-159" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>long 值</p><h4 id="inherited-from-68" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-68" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#setxdatalong">setxDataLong</a></p><hr><h3 id="setxdatapoint" tabindex="-1">setxDataPoint <a class="header-anchor" href="#setxdatapoint" aria-label="Permalink to &quot;setxDataPoint&quot;">​</a></h3><p>▸ <strong>setxDataPoint</strong>(<code>appName</code>, <code>val</code>): <code>boolean</code></p><p>设置实体的指定 XData 类型中的点对象</p><h4 id="parameters-105" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-105" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><a href="./2d.McGePoint3d.html"><code>McGePoint3d</code></a></td><td style="text-align:left;">点对象</td></tr></tbody></table><h4 id="returns-160" tabindex="-1">Returns <a class="header-anchor" href="#returns-160" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>获取结果及三维点对象</p><h4 id="inherited-from-69" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-69" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#setxdatapoint">setxDataPoint</a></p><hr><h3 id="setxdatastring" tabindex="-1">setxDataString <a class="header-anchor" href="#setxdatastring" aria-label="Permalink to &quot;setxDataString&quot;">​</a></h3><p>▸ <strong>setxDataString</strong>(<code>appName</code>, <code>val</code>): <code>boolean</code></p><p>设置与特定实体关联的 XData 信息，并以字符串形式设置</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCADUiPrEntity, McDbEntity } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADUiPrEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;选择对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isValid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">McDbEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setxDataString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DataName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xxxxx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //设置成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //设置失败</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="parameters-106" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-106" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>appName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">扩展数据名称</td></tr><tr><td style="text-align:left;"><code>val</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">字符串值</td></tr></tbody></table><h4 id="returns-161" tabindex="-1">Returns <a class="header-anchor" href="#returns-161" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>是否设置成功</p><h4 id="inherited-from-70" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-70" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#setxdatastring">setxDataString</a></p><hr><h3 id="syncdata" tabindex="-1">syncData <a class="header-anchor" href="#syncdata" aria-label="Permalink to &quot;syncData&quot;">​</a></h3><p>▸ <strong>syncData</strong>(<code>toCpp?</code>): <code>boolean</code></p><p>js 对像的数据与McDbCustomEntity::m_mapData的同步。</p><h4 id="parameters-107" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-107" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>toCpp</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td></tr></tbody></table><h4 id="returns-162" tabindex="-1">Returns <a class="header-anchor" href="#returns-162" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-71" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-71" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#syncdata">syncData</a></p><hr><h3 id="transformby" tabindex="-1">transformBy <a class="header-anchor" href="#transformby" aria-label="Permalink to &quot;transformBy&quot;">​</a></h3><p>▸ <strong>transformBy</strong>(<code>_mat</code>): <code>boolean</code></p><p>获取自定义对象矩阵坐标变换</p><h4 id="parameters-108" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-108" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>_mat</code></td><td style="text-align:left;"><a href="./2d.McGeMatrix3d.html"><code>McGeMatrix3d</code></a></td></tr></tbody></table><h4 id="returns-163" tabindex="-1">Returns <a class="header-anchor" href="#returns-163" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="overrides-7" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-7" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#transformby">transformBy</a></p><hr><h3 id="unerase" tabindex="-1">unErase <a class="header-anchor" href="#unerase" aria-label="Permalink to &quot;unErase&quot;">​</a></h3><p>▸ <strong>unErase</strong>(): <code>boolean</code></p><p>反删除对象。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//假设obj为一个数据库对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> obj.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unErase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span></span></code></pre></div><h4 id="returns-164" tabindex="-1">Returns <a class="header-anchor" href="#returns-164" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="inherited-from-72" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-72" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#unerase">unErase</a></p><hr><h3 id="unmergecells" tabindex="-1">unMergeCells <a class="header-anchor" href="#unmergecells" aria-label="Permalink to &quot;unMergeCells&quot;">​</a></h3><p>▸ <strong>unMergeCells</strong>(<code>onSelectionChange?</code>): <code>void</code></p><p>取消合并选中的单元格</p><h4 id="parameters-109" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-109" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>onSelectionChange?</code></td><td style="text-align:left;">(<code>cells</code>: { <code>col</code>: <code>number</code> ; <code>row</code>: <code>number</code> }[]) =&gt; <code>void</code></td><td style="text-align:left;">可选的选择变更回调</td></tr></tbody></table><h4 id="returns-165" tabindex="-1">Returns <a class="header-anchor" href="#returns-165" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="updatedisplay" tabindex="-1">updateDisplay <a class="header-anchor" href="#updatedisplay" aria-label="Permalink to &quot;updateDisplay&quot;">​</a></h3><p>▸ <strong>updateDisplay</strong>(): <code>void</code></p><p>显示调用对象更新显示.</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 假设ent为有效实例对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateDisplay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h4 id="returns-166" tabindex="-1">Returns <a class="header-anchor" href="#returns-166" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="inherited-from-73" tabindex="-1">Inherited from <a class="header-anchor" href="#inherited-from-73" aria-label="Permalink to &quot;Inherited from&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#updatedisplay">updateDisplay</a></p><hr><h3 id="worlddraw" tabindex="-1">worldDraw <a class="header-anchor" href="#worlddraw" aria-label="Permalink to &quot;worldDraw&quot;">​</a></h3><p>▸ <strong>worldDraw</strong>(<code>draw</code>): <code>void</code></p><p>绘制自定义实体</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { McDbCustomEntity, MxCADWorldDraw, McDbLine } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 新创建 McDbTestLineCustomEntity 类继承 McDbCustomEntity</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbTestLineCustomEntity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbCustomEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // 定义McDbTestLineCustomEntity内部的点对象 pt1、pt2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> pt2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McGePoint3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     //绘制实体</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> worldDraw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">draw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADWorldDraw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tmpline </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.pt2);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       draw.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tmpline);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span></code></pre></div><h4 id="parameters-110" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-110" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>draw</code></td><td style="text-align:left;"><a href="./2d.MxCADWorldDraw.html"><code>MxCADWorldDraw</code></a></td></tr></tbody></table><h4 id="returns-167" tabindex="-1">Returns <a class="header-anchor" href="#returns-167" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="overrides-8" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-8" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p><a href="./2d.McDbCustomEntity.html">McDbCustomEntity</a>.<a href="./2d.McDbCustomEntity.html#worlddraw">worldDraw</a></p>`,1560)])])}const g=e(l,[["render",n]]);export{k as __pageData,g as default};
