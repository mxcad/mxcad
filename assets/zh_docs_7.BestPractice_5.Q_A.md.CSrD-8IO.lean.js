import{_ as i,c as a,o as n,a4 as h}from"./chunks/framework.DirjshaF.js";const t="/mxcad_docs/assets/%E6%B7%BB%E5%8A%A0%E5%AD%97%E4%BD%93%E6%96%87%E4%BB%B6.CoYWJ1E0.jpg",l="/mxcad_docs/assets/%E6%B8%85%E9%99%A4%E7%BC%93%E5%AD%98.BJ_q6Hed.png",p="/mxcad_docs/assets/%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC%E5%8F%B7.GF2ydq8Y.jpg",k="/mxcad_docs/assets/%E5%9C%A8%E7%BA%BF%E7%9A%84demo%E7%89%88%E6%9C%AC.DnxjJGTu.jpg",e="/mxcad_docs/assets/%E7%BB%98%E5%88%B6UI%E7%95%8C%E9%9D%A2.De2Oa4Yu.jpg",d="/mxcad_docs/assets/%E6%8F%92%E5%85%A5UI.C1Em5VCc.jpg",E="/mxcad_docs/assets/%E6%B7%BB%E5%8A%A0%E5%AD%97%E4%BD%93%E6%96%87%E4%BB%B6-mxcad.CLUJYdfx.jpg",r="/mxcad_docs/assets/%E6%9B%BF%E6%8D%A22d.rWxIuxIa.jpg",g="/mxcad_docs/assets/%E6%9B%BF%E6%8D%A22d-st.BnK4VXdn.jpg",c="/mxcad_docs/assets/%E8%AF%BB%E5%8F%96%E6%89%A9%E5%B1%95%E6%95%B0%E6%8D%AE.DRjqi7Kn.jpg",y="/mxcad_docs/assets/%E6%9B%B4%E6%96%B0MxCADAPP%E7%89%88%E6%9C%AC.jVEEBuIu.jpg",B=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"zh/docs/7.BestPractice/5.Q&A.md","filePath":"zh/docs/7.BestPractice/5.Q&A.md"}'),o={name:"zh/docs/7.BestPractice/5.Q&A.md"};function F(C,s,m,u,A,D){return n(),a("div",null,[...s[0]||(s[0]=[h(`<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h1><h2 id="图纸" tabindex="-1">图纸 <a class="header-anchor" href="#图纸" aria-label="Permalink to &quot;图纸&quot;">​</a></h2><h3 id="_1-图纸无法显示" tabindex="-1">1.图纸无法显示 <a class="header-anchor" href="#_1-图纸无法显示" aria-label="Permalink to &quot;1.图纸无法显示&quot;">​</a></h3><p>尽量保证mxcad和mxdraw以及<a href="https://www.mxdraw.com/download.html" target="_blank" rel="noreferrer">MxDraw云图开发包</a>是最新版本，</p><p>出现图纸无法显示且浏览器控制台没有报错，一般情况都是版本问题。</p><p>更新到最新版本:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mxcad@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mxdraw@latest</span></span></code></pre></div><h3 id="_2-图纸显示错误" tabindex="-1">2.图纸显示错误 <a class="header-anchor" href="#_2-图纸显示错误" aria-label="Permalink to &quot;2.图纸显示错误&quot;">​</a></h3><p>如果你在打开我们提供的转换后的示例图纸打开是正常的,但是你自己转换的图纸无法显示部分或者根本不显示。</p><p>那么你可以多转换几张图纸, 如果只是这张图纸有问题，那么可能是转换程序对该图纸支持不完善，你可以将这张图纸发给客服，便于我们修复这个问题。</p><h3 id="_3-mxcad集成项目中-如何修改默认打开的图纸" tabindex="-1">3.mxcad集成项目中，如何修改默认打开的图纸 <a class="header-anchor" href="#_3-mxcad集成项目中-如何修改默认打开的图纸" aria-label="Permalink to &quot;3.mxcad集成项目中，如何修改默认打开的图纸&quot;">​</a></h3><p>可以通过 iframe 的 src 属性进行 query 传参<code>{file:&#39;目标图纸&#39;}</code>，如下所示：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> iframe.src </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://localhost:3000/mxcad?file=empty_template.mxweb&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_4-修改图纸精度" tabindex="-1">4.修改图纸精度 <a class="header-anchor" href="#_4-修改图纸精度" aria-label="Permalink to &quot;4.修改图纸精度&quot;">​</a></h3><p>在 mxcad 中打开 mxweb 图纸时，会出现图形显示精度不够导致图形偏差的情况。如：图纸上的圆显示为多边形，这是因为在图纸初始化时它的显示精度是一个经验值，mxcad 会根据圆的大小来确定它的显示精度。</p><p>解决方案1：调用重绘方法，重新调整图纸显示精度。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用重绘命令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>解决方案2：在 mxcad 项目初始化时，手动设定显示精度值（0~1000）。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置对象的显示精度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mxcad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({DisplayPrecision:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="_5-文字显示" tabindex="-1">5.文字显示 <a class="header-anchor" href="#_5-文字显示" aria-label="Permalink to &quot;5.文字显示&quot;">​</a></h3><p>在 mxcad 中加载 mxweb 图纸时，会出现图纸文字乱码的问题。如：打开图纸，图纸上的部分文字或所有文字均显示为“？”，这是因为 mxcad 的字体文件加载路径<code>fontspath</code>下并没有找到图纸上文字对应的目标字体文件。</p><p>解决方案1：将图纸上的所有未加载相应字体文件的字体，全部转成 mxcad 项目中已经加载了字体文件的字体。</p><p>解决方案2：在云图开发包<code>MxDrawCloudServer\\Bin\\MxCAD\\Release</code>目录中下的<code>fonts</code>文件夹下加入缺失的字体文件，并将图纸上缺少的字体文件也放入前端项目 mxcad 的字体文件加载路径<code>fontspath</code>下。最后重新转换图纸格式，并用新的前端项目打开新转换出来的图纸。</p><p><img src="`+t+`" alt="添加字体文件"></p><h3 id="_6-设置线重不生效" tabindex="-1">6.设置线重不生效 <a class="header-anchor" href="#_6-设置线重不生效" aria-label="Permalink to &quot;6.设置线重不生效&quot;">​</a></h3><p>在 mxcad 中设置实体线重，但在图纸中没有生效看到效果，这可能时是由于在mxcad对象的显示线重属性 <a href="./../../api/classes/2d.McObject.html#showlineweight">showLineWeight</a> 未设置导致的。</p><p>解决方案：在需要显示线重时，设置 mxcad对象的线重方法 <a href="./../../api/classes/2d.McObject.html#showlineweight">showLineWeight()</a> 为 true。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp, McDbLine, McCmColor} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//画直线</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> drawLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mxcad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 创建新画布</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> line </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  line.trueColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McCmColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  line.lineweight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showLineWeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(line);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用画直线方法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="_7-图纸转pdf-包含图片" tabindex="-1">7.图纸转pdf（包含图片） <a class="header-anchor" href="#_7-图纸转pdf-包含图片" aria-label="Permalink to &quot;7.图纸转pdf（包含图片）&quot;">​</a></h3><p>我们在云图开发包中提供了图纸转pdf相关的图纸转换程序，在dwg图纸转pdf的过程中，我们发现当图纸中包含有图片时导出的pdf没有包含图片。这是因为转换程序没有找到目标图片，所以转出的pdf中不包含图片。</p><p>解决方案：将插入到dwg图纸中的图片与需要转换的dwg图纸放在同一目录下，再次转换就能够得到的pdf就会包含图纸中插入的图片。</p><h2 id="图块" tabindex="-1">图块 <a class="header-anchor" href="#图块" aria-label="Permalink to &quot;图块&quot;">​</a></h2><h3 id="_1-一个图块多次插入-改变其中一个其它的图块随之改变" tabindex="-1">1.一个图块多次插入，改变其中一个其它的图块随之改变 <a class="header-anchor" href="#_1-一个图块多次插入-改变其中一个其它的图块随之改变" aria-label="Permalink to &quot;1.一个图块多次插入，改变其中一个其它的图块随之改变&quot;">​</a></h3><p>CAD的图块功能，它默认采用的是引用的方式，因此其中一个改变其他图块也会跟着一起改变。你如果不想采用引用的方式插入图块，可以直接修改图块名。</p><p>以引用的方式使用图块就比较节约内存，如果不使用引用的方式的话，你有100个图块，相当于就有100个内存不同的名字。</p><h3 id="_2-获取目标图块详情" tabindex="-1">2.获取目标图块详情 <a class="header-anchor" href="#_2-获取目标图块详情" aria-label="Permalink to &quot;2.获取目标图块详情&quot;">​</a></h3><p>我们可以通过调用 CAD 图块引用实体 McDbBlockReference() 中的 <a href="./../../api/classes/2d.McDbBlockReference.html#getallattribute">getAllAttribute()</a> 方法得到块引用的所有属性文字对象id，然后通过对象id获取到图块中的实体详情。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp ,McDbBlockReference, McDbAttribute } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 对象选择事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().get.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;selectChange&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ids</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McObjectId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ids.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ids[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mxent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMxDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instanceof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbBlockReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blkRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbBlockReference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aryId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blkRef.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAllAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aryId.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attribt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbAttribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(attribt.textString);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(attribt.tag);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="图层" tabindex="-1">图层 <a class="header-anchor" href="#图层" aria-label="Permalink to &quot;图层&quot;">​</a></h2><h3 id="_1-对象过滤" tabindex="-1">1.对象过滤 <a class="header-anchor" href="#_1-对象过滤" aria-label="Permalink to &quot;1.对象过滤&quot;">​</a></h3><p>在CAD中，图层允许用户将图形对象组织到不同的层中，以便于管理和编辑。每个图层都有其独特的特性，如颜色、线型、线宽等，这些特性决定了图层上对象的显示方式。我们可以通过设置 <a href="./../../api/classes/2d.MxCADResbuf.html#class-mxcadresbuf">MxCADResbuf</a> 过滤器来实现图层上的对象过滤。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCADSelectionSet } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ss </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADSelectionSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 得到图上，直线，圆，圆弧，多义线，在0层上的对象.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ss.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">allSelect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADResbuf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([DxfCode.kEntityType, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LINE,ARC,CIRCLE,LWPOLYLINE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,DxfCode.kLayer,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;得到对象数目:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ss.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><h2 id="更新版本" tabindex="-1">更新版本 <a class="header-anchor" href="#更新版本" aria-label="Permalink to &quot;更新版本&quot;">​</a></h2><p>运行项目调用API的过程中可能出现调用不成功或报错：is not a function 等，这些都是由于调用的mxcad中的API为最新版本，而项目中的 mxcad 版本未更新，因此需保证项目中的 mxcad 和 mxdraw 均为最新版本。</p><p>清除项目缓存和清除浏览器缓存后，先卸载再重新安装。其中，清除浏览器缓存可参考下面操作：</p><p><img src="`+l+`" alt="Alt text"></p><p>清除项目缓存可通过运行命令，以 npm 为例：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div><p>卸载 mxcad 和 mxdraw，并下载最新版本的 mxcad 和 mxdraw 。以 npm 为示例：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uni</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mxcad</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mxdraw</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mxcad@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mxdraw@latest</span></span></code></pre></div><p>更新完成后，可通过查看依赖包的版本号是否与 npm 库的最新版本相同。 <img src="`+p+'" alt="Alt text"></p><p>或者，查看运行起来的项目日志中打印的版本号是否与<a href="https://demo.mxdraw3d.com:3000/mxcad/" target="_blank" rel="noreferrer">在线demo</a>日志中打印的版本号一致 <img src="'+k+'" alt="Alt text"></p><h2 id="mxcad-app应用集成" tabindex="-1">MxCAD APP应用集成 <a class="header-anchor" href="#mxcad-app应用集成" aria-label="Permalink to &quot;MxCAD APP应用集成&quot;">​</a></h2><h3 id="_1-如何修改app的ui界面" tabindex="-1">1.如何修改APP的UI界面 <a class="header-anchor" href="#_1-如何修改app的ui界面" aria-label="Permalink to &quot;1.如何修改APP的UI界面&quot;">​</a></h3><ol><li><p>若只是在原有 MxCAD App 界面的基础上简单修改页面布局可参考 <a href="./../7.BestPractice/2.MxCADAPPApplicationIntegration/1.BasicDescriptionOfProjectIntegration.html#mxcad-app在线cad-配制说明">MxCAD APP在线CAD 配制说明</a> ,根据自身需求修改 mxUiConfig.json 文件来配置界面。</p></li><li><p>若想要自定义界面，可以在项目中实现自己的UI，然后根据ID、类、属性等定位到目标位置插入你自己的UI。</p></li></ol><ul><li><p>在项目中绘制UI界面 <img src="'+e+'" alt="Alt text"></p></li><li><p>将绘制好的UI界面插入目标位置 <img src="'+d+`" alt="Alt text"></p></li></ul><p>此外，你也可以直接创建元素插入到目标位置，其中，该目标位置需要自己取获取，拿到它对应的元素后把你写的元素或者组件插入进去。</p><h3 id="_2-如何修改文字字体" tabindex="-1">2.如何修改文字字体 <a class="header-anchor" href="#_2-如何修改文字字体" aria-label="Permalink to &quot;2.如何修改文字字体&quot;">​</a></h3><p>在项目初始化时通过 <a href="./../../api/classes/2d.McAppType.html#addnetworkloadingtruetypefont">MxCpp.App.addNetworkLoadingTrueTypeFont()</a> 方法来设置我们系统需要加载哪些字体，方便后面我们修改字体时加载使用。</p><p>然后获取文字实体，最后将该文字的 textStyle 属性设置为目标文字字体样式。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxFun } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxdraw&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mxcad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// MxCAD创建成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MxFun.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mxcadApplicationCreatedMxCADObject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // addNetworkLoadingTrueTypeFont([字体名],[字体中文名],[字体文件])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    MxCpp.App.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addNetworkLoadingTrueTypeFont</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;simsun&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;syadobe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;思原宋体&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;思原黑体&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stadobe.otf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;syadobe.otf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 修改文字样式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Mx_Test_TrueText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mxcad </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //清空当前显示内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    MxCpp.App.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadFonts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([], [], [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;syadobe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;simsun&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 添加一个黑体文字样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddTureTypeTextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ht_style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;syadobe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 添加一个宋体文字样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddTureTypeTextStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;st_style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;simsun&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 设置当前样式为黑体</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mxcad.drawTextStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ht_style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mxcad.drawColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McCmColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> idText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drawText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;绘图控件TrueType文字测试&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> idText.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 修改文字样式为宋体</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ent) ent.textStyle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;st_style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zoomAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mxcad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateDisplay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_3-添加字体文件" tabindex="-1">3.添加字体文件 <a class="header-anchor" href="#_3-添加字体文件" aria-label="Permalink to &quot;3.添加字体文件&quot;">​</a></h3><p>mxcad 项目中存储了一些常用的字体文件，但我们经常会遇到一些目标图纸需要加载自己特需的字体文件。这种图纸在 mxcad 项目中初次打开的时候会出现文本样式与AutoCAD中的展示有偏差、字体文本显示为“？”、或字体样式不符合预期等情况。</p><p>我们可以将目标字体文件拷贝到云图开发包的<code>MxDrawCloudServer\\Bin\\MxCAD\\Release\\fonts</code> 目录下，在 mxcad 项目中添加上图纸需要的目标字体文件。</p><p><img src="`+E+'" alt="Alt text"></p><h3 id="_4-更新图纸水印显示" tabindex="-1">4.更新图纸水印显示 <a class="header-anchor" href="#_4-更新图纸水印显示" aria-label="Permalink to &quot;4.更新图纸水印显示&quot;">​</a></h3><p>我们在修改图纸水印后会提供修改水印后的云图开发包，在该开发包中的MxCAD项目中打开项目能够直接看到图纸水印修改后的样子。若用户需要在其他MxCAD项目中使用修改的水印效果，则需要替换 mxcad 依赖包中的 wasm 文件夹下的相关文件，其具体操作如下：</p><ol><li>解压修改水印后的云图开发包，找到<code>MxDrawCloudServer\\SRC\\TsWeb\\public\\mxcad\\assets</code>目录。</li><li>将上述目录下的 js文件、wasm文件等分别拷贝到目标项目的 mxcad 依赖包下的 wasm 中。</li></ol><ul><li>选中<code>MxDrawCloudServer\\SRC\\TsWeb\\public\\mxcad\\assets</code>目录下的 <code>mxdrawassembly_min.js</code> 、 <code>mxdrawassembly_min.wasm</code> 、<code>mxdrawassembly_min.worker.js</code> 三个文件拷贝进目标项目的 <code>\\node_modules\\mxcad\\dist\\wasm\\2d</code> 文件夹下；再将 <code>mxdrawassembly_min.js</code>、 <code>mxdrawassembly_minst.wasm</code> 两个文件拷贝进目标项目的 <code>\\node_modules\\mxcad\\dist\\wasm\\2d-st</code> 文件夹下。其中，拷贝的文件命名中会有一串hash码，在放入<code>2d</code>文件夹下时需将文件重命名去除中间的hash码。 <img src="'+r+'" alt="Alt text"><img src="'+g+'" alt="Alt text"></li><li>替换文件后，删除目标项目中<code>node_modules</code>文件夹下的所有缓存文件，如<code>.vite</code>文件夹下的所有文件（可直接删除<code>.vite </code>文件夹），再清除浏览器中缓存。</li><li>重新启动项目，查看效果。</li></ul><div class="tip custom-block"><p class="custom-block-title">注意</p><p><code>MxDrawCloudServer\\SRC\\TsWeb\\public\\mxcad\\assets</code>目录下有两个<code>mxdrawassembly_min.js</code>文件，这两个文件名中的hash码不同，文件大小也有差异。这两个文件需要分别拷贝到对应的<code>2d</code>和<code>2d-st</code>文件夹中。通常情况下，<code>2d</code>文件夹下的<code>mxdrawassembly_min.js</code>文件体积会偏大一点，在替换的时候需要注意。</p></div><h3 id="_5-设置加载扩展数据" tabindex="-1">5.设置加载扩展数据 <a class="header-anchor" href="#_5-设置加载扩展数据" aria-label="Permalink to &quot;5.设置加载扩展数据&quot;">​</a></h3><p>在通过云图开发包启动node.js后台服务，打开dwg图纸时可能会出现无法读取图纸内扩展数据的情况。这是因为为了提高程序转换图纸的速率，我们默认在打开dwg文件时不加载扩展数据。如果你需要在加载图纸后能够读取扩展数据，则需要将<code>MxDrawCloudServer\\Bin\\MxCAD\\Release</code>目录下的<code>mxcad_ini.json</code>文件种的<code>read_exdata</code>属性设置为<code>true</code>，并重启服务。清理缓存或不使用缓存打开图纸后就能够读取图纸中的扩展数据了。</p><p><img src="'+c+'" alt="Alt text"></p><h3 id="_6-更新mxcad-app" tabindex="-1">6.更新MxCAD APP <a class="header-anchor" href="#_6-更新mxcad-app" aria-label="Permalink to &quot;6.更新MxCAD APP&quot;">​</a></h3><p>云图开发包中提供的MxCAD工程是MxCAD APP中的测试模块，该工程打包后是一个js文件，这个js文件最终会被放进MxCAD工程同目录下的<code>dist\\plugins</code>中。而且，MxCAD 中引用的mxcad、mdraw均是dist目录下的依赖，因此，要想更新MxCAD APP就需要将最新云图开发包中的dist目录下的所有文件复制粘贴到原本的dist目录下。</p><p><img src="'+y+`" alt="Alt text"></p><h3 id="_7-更新后端转换程序" tabindex="-1">7.更新后端转换程序 <a class="header-anchor" href="#_7-更新后端转换程序" aria-label="Permalink to &quot;7.更新后端转换程序&quot;">​</a></h3><p>与上述更新MxCAD APP的操作步骤一样，我们只需要将最新云图开发包中提供后端服务的<code>MxDrawCloudServer\\Bin</code>目录下的转换程序全部复制粘贴到原本的后端服务所在的目录进行替换就可以了。</p><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><h3 id="_1-对象id句柄使用说明" tabindex="-1">1.对象ID句柄使用说明 <a class="header-anchor" href="#_1-对象id句柄使用说明" aria-label="Permalink to &quot;1.对象ID句柄使用说明&quot;">​</a></h3><p>ID和句柄都用来标识一个对象，ID是一个64位长整型变量，是一个内存地址，访问速度最快，但它每次打开都不一样，如果需要把一个对象的标识存起来，下次又能找到对象，就需要使用句柄，句柄是一个字符串变量，它保证不管什么时候总是不会变化,句柄在DWG图纸中是唯一存在，ID是内存中唯一存在。</p><ul><li>通过句柄查找对象</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp, McDbDatabase } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 通过句柄查找对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> handle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;6e78&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dataBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McDbDatabase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> objectId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dataBase.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handleToIdIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(handle);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> entity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> objectId.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMxDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(entity){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;目标实体对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,entity);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>通过实体对象查找句柄</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp, McObjectId } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getEntity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCADUiPrEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  getEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;选择目标对象&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getEntity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">entId.id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 通过ID对象得到图形数据对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entId.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMcDbEntity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ent) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 通过图形数据对象得到句柄</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> handle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;目标对象句柄&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,handle);</span></span></code></pre></div><h3 id="_2-关闭移动端三视图" tabindex="-1">2.关闭移动端三视图 <a class="header-anchor" href="#_2-关闭移动端三视图" aria-label="Permalink to &quot;2.关闭移动端三视图&quot;">​</a></h3><p>在 mxcad 移动端demo中，可能会出现转动屏幕，图纸内容被当作是3对象会随着 Z 轴转动，这是因为mxcad对象开启了三视图旋转，可通过下述代码关闭三视图回到2d视图：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MxCpp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mxcad&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mxcad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MxCpp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCurrentMxCAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mxcad.mxdraw.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getOrbitControls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().touches.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ONE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TOUCH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PAN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>`,88)])])}const b=i(o,[["render",F]]);export{B as __pageData,b as default};
